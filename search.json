[{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://fabianenc.github.io/r6qualitytools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrea Barahona. Author. Fabian Encarnacion. Author, maintainer, copyright holder. Miguel Flores. Author. Javier Tarrio-Saavedra. Contributor. Salvador Naya. Contributor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barahona , Encarnacion F, Flores M (2024). r6qualitytools: R6-Based Statistical Methods Quality Science. R package version 1.0.1, https://github.com/Fabianenc/r6qualitytools.","code":"@Manual{,   title = {r6qualitytools: R6-Based Statistical Methods for Quality Science},   author = {Andrea Barahona and Fabian Encarnacion and Miguel Flores},   year = {2024},   note = {R package version 1.0.1},   url = {https://github.com/Fabianenc/r6qualitytools}, }"},{"path":"https://fabianenc.github.io/r6qualitytools/index.html","id":"r6qualitytools","dir":"","previous_headings":"","what":"R6-Based Statistical Methods for Quality Science","title":"R6-Based Statistical Methods for Quality Science","text":"goal r6qualitytools provide comprehensive suite statistical tools Quality Management, designed around Define, Measure, Analyze, Improve, Control (DMAIC) cycle used Six Sigma methodology. builds original discontinued CRAN package qualitytools, enhancing R6 object-oriented programming, modernizing graphics ggplot2 plotly, adopting tidyverse principles data manipulation visualization.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R6-Based Statistical Methods for Quality Science","text":"","code":"install.packages(\"r6qualitytools\") library(\"r6qualitytools\")"},{"path":"https://fabianenc.github.io/r6qualitytools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"R6-Based Statistical Methods for Quality Science","text":"r6qualitytools includes various tools manage quality science processes efficiently: DMAIC methodology: tools designed around Six Sigma cycle. R6-based design: uses R6 classes flexibility performance. Interactive graphics: modern visualizations ggplot2 plotly. tidyverse integration: easy data manipulation visualization. supports variety analyses relevant quality management, offering intuitive interface beginners advanced users. details, see package documentation.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R6-Based Statistical Methods for Quality Science","text":"can use package generate statistical models control charts efficiently. basic examples demonstrates use package:","code":"library(r6qualitytools)  # Object of Class Distr - Normal set.seed(123) data <- rnorm(100, mean = 5, sd = 2) parameters <- list(mean = 5, sd = 2) distr <- Distr$new(x = data, name = \"normal\", parameters = parameters, sd = 2, n = 100, loglik = -120) distr$plot() # Class DistrCollection data2 <- rpois(100, lambda = 3) parameters2 <- list(lambda = 3) distr2 <- Distr$new(x = data2, name = \"poisson\", parameters = parameters2, sd = sqrt(3), n = 100, loglik = -150) distr2$plot() collection <- DistrCollection$new() collection$add(distr) collection$add(distr2) collection$summary() #>  #> ------ Fitted Distribution and estimated parameters ------ #>  #> fitted distribution is normal : #> $mean #> [1] 5 #>  #> $sd #> [1] 2 #>  #>  #> fitted distribution is poisson : #> $lambda #> [1] 3 #>  #>  #>  #> ------ Goodness of Fit - Anderson Darling Test ------ #>  #>   Distribution     A p.value #> 1       normal 0.182  0.9104 #> 2      poisson 5.733      NA # qqPlot and ppPlot set.seed(1234) x <- rnorm(20, mean = 20) qqPlot(x, \"normal\", bounds.lty = 3, bounds.col = \"red\") ppPlot(x, \"normal\", bounds.lty = 3, bounds.col = \"red\") # Gage capacity x <- c( 9.991, 10.013, 10.001, 10.007, 10.010, 10.013, 10.008, 10.017, 10.005, 10.005, 10.002,         10.017, 10.005, 10.002, 9.996, 10.011, 10.009 , 10.006, 10.008, 10.003, 10.002, 10.006,          10.010, 9.992, 10.013)  cg(x, target = 10.003, tolerance = c(9.903, 10.103)) # Process Capability set.seed(1234) data <- rnorm(20, mean = 20) pcr(data, \"normal\", lsl = 17, usl = 23) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #>  #>  Anderson Darling Test for normal distribution #>  #> data:  data  #> A = 0.5722, mean = 19.749, sd = 1.014, p-value = 0.1191 #> alternative hypothesis: true distribution is not equal to normal # Gage R&R Design gdo <- gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE, method='nested') # vector of responses y <- c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16) gdo$response(y)  gdo <- gageRR(gdo, method='nested') #>  #> AnOVa Table -  nested Design #>               Df Sum Sq Mean Sq F value Pr(>F)     #> Operator       2   0.01   0.003   0.029  0.972     #> Operator:Part 27  89.03   3.298  35.283 <2e-16 *** #> Residuals     60   5.61   0.093                    #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0935         0.0805 0.306     1.83           0.284 #>  repeatability    0.0935         0.0805 0.306     1.83           0.284 #>  reproducibility  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0680         0.9195 1.033     6.20           0.959 #> totalVar          1.1615         1.0000 1.078     6.47           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  # Using Plots gdo$errorPlot() gdo$whiskersPlot() gdo$averagePlot() gdo$compPlot() # Factorial Designs vp.full <- facDesign(k = 3) y = rnorm(2^3) vp.full$.response(y) vp.full$summary() #> Information about the factors: #>  #>            A       B       C #> low       -1      -1      -1 #> high       1       1       1 #> name       A       B       C #> unit                         #> type numeric numeric numeric #> ----------- #>   StandOrder RunOrder Block  A  B  C           y #> 7          7        1     1 -1  1  1  0.03572991 #> 2          2        2     1  1 -1 -1  0.11297506 #> 6          6        3     1  1 -1  1  1.42855203 #> 1          1        4     1 -1 -1 -1  0.98340378 #> 4          4        5     1  1  1 -1 -0.62245679 #> 3          3        6     1 -1  1 -1 -0.73153600 #> 8          8        7     1  1  1  1 -0.51666972 #> 5          5        8     1 -1 -1  1 -1.75073344 vp.full$effectPlot() # Plots paretoPlot(vp.full, p.col = \"Pastel1\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. normalPlot(vp.full) wire1 <- wirePlot(A,B,y, data = vp.full) wire1$plot contour1 <- contourPlot(A,B,y, data = vp.full) contour1$plot # Mix Design mdo <- mixDesign(3, 2, center = FALSE, axial = FALSE, randomize = FALSE, replicates = c(1, 1, 2, 3))  mdo$names(c(\"polyethylene\", \"polystyrene\", \"polypropylene\")) elongation <- c(11.0, 12.4, 15.0, 14.8, 16.1, 17.7, 16.4, 16.6, 8.8, 10.0, 10.0, 9.7, 11.8, 16.8, 16.0) mdo$.response(elongation) mdo$summary() #> Simplex LATTICE Design #> Information about the factors: #>  #>      polyethylene polystyrene polypropylene #> low             0           0             0 #> high            1           1             1 #> name polyethylene polystyrene polypropylene #> unit            %           %             % #> type      numeric     numeric       numeric #>  #> ----------- #>  #> Information about the Design Points: #>  #>            1-blend 2-blend #> Unique           3       3 #> Replicates       2       3 #> Sub Total        6       9 #> Total           15         #>  #> ----------- #>  #> Information about the constraints: #>  #> A >= 0 B >= 0 C >= 0 #>  #> ----------- #>  #>                               PseudoComponent _|_ Proportion _|_ Amount #>  #>    StandOrder RunOrder    Type |   A   B   C _ | _   A   B   C _ | _   A   B #> 1           1        1 1-blend | 1.0 0.0 0.0   |   1.0 0.0 0.0   |   1.0 0.0 #> 2           2        2 1-blend | 1.0 0.0 0.0   |   1.0 0.0 0.0   |   1.0 0.0 #> 3           3        3 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 4           4        4 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 5           5        5 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 6           6        6 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 7           7        7 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 8           8        8 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 9           9        9 1-blend | 0.0 1.0 0.0   |   0.0 1.0 0.0   |   0.0 1.0 #> 10         10       10 1-blend | 0.0 1.0 0.0   |   0.0 1.0 0.0   |   0.0 1.0 #> 11         11       11 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 12         12       12 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 13         13       13 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 14         14       14 1-blend | 0.0 0.0 1.0   |   0.0 0.0 1.0   |   0.0 0.0 #> 15         15       15 1-blend | 0.0 0.0 1.0   |   0.0 0.0 1.0   |   0.0 0.0 #>      C | elongation #> 1  0.0 |       11.0 #> 2  0.0 |       12.4 #> 3  0.0 |       15.0 #> 4  0.0 |       14.8 #> 5  0.0 |       16.1 #> 6  0.5 |       17.7 #> 7  0.5 |       16.4 #> 8  0.5 |       16.6 #> 9  0.0 |        8.8 #> 10 0.0 |       10.0 #> 11 0.5 |       10.0 #> 12 0.5 |        9.7 #> 13 0.5 |       11.8 #> 14 1.0 |       16.8 #> 15 1.0 |       16.0 #>  #> ----------- #>  #> Mixture Total: 1 equals 1  contour3 <- contourPlot3(A, B, C, elongation, data = mdo, form = \"quadratic\") contour3$plot wire3 <- wirePlot3(A, B, C, elongation, data = mdo, form = \"quadratic\") wire3$plot # Taguchi Design tdo <- taguchiDesign(\"L9_3\",randomize=F) tdo$values(list(A = c(\"material 1\", \"material 2\", \"material 3\"), B = c(29, 30, 35))) tdo$names(c(\"Factor 1\", \"Factor 2\", \"Factor 3\", \"Factor 4\")) set.seed(1) tdo$.response(rnorm(9)) tdo$summary() #> Taguchi SINGLE Design #> Information about the factors: #>  #>                  A        B        C        D #> value 1 material 1       29        1        1 #> value 2 material 2       30        2        2 #> value 3 material 3       35        3        3 #> name      Factor 1 Factor 2 Factor 3 Factor 4 #> unit                                          #> type       numeric  numeric  numeric  numeric #>  #> ----------- #>  #>   StandOrder RunOrder Replicate A B C D   rnorm(9) #> 1          1        1         1 1 1 1 1 -0.6264538 #> 2          2        2         1 1 2 2 2  0.1836433 #> 3          3        3         1 1 3 3 3 -0.8356286 #> 4          4        4         1 2 1 2 3  1.5952808 #> 5          5        5         1 2 2 3 1  0.3295078 #> 6          6        6         1 2 3 1 2 -0.8204684 #> 7          7        7         1 3 1 3 2  0.4874291 #> 8          8        8         1 3 2 1 3  0.7383247 #> 9          9        9         1 3 3 2 1  0.5757814 #>  #> ----------- tdo$effectPlot() # Plackett-Burman Design pbdo<- pbDesign(26) pbdo$summary() #> Plackett-Burman  Design #> Information about the factors: #>  #>               A       B       C       D       E       F       G       H       J #> value 1      -1      -1      -1      -1      -1      -1      -1      -1      -1 #> value 2       1       1       1       1       1       1       1       1       1 #> name                                                                            #> unit                                                                            #> type    numeric numeric numeric numeric numeric numeric numeric numeric numeric #>               K       L       M       N       O       P       Q       R       S #> value 1      -1      -1      -1      -1      -1      -1      -1      -1      -1 #> value 2       1       1       1       1       1       1       1       1       1 #> name                                                                            #> unit                                                                            #> type    numeric numeric numeric numeric numeric numeric numeric numeric numeric #>               T       U       V       W       X       Y       Z #> value 1      -1      -1      -1      -1      -1      -1      -1 #> value 2       1       1       1       1       1       1       1 #> name                                                            #> unit                                                            #> type    numeric numeric numeric numeric numeric numeric numeric #>  #> ----------- #>  #>    StandOrder RunOrder Replicate  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P #> 1          16        1         1  1 -1  1  1 -1 -1 -1  1  1  1  1  1 -1 -1  1 #> 2          11        2         1 -1 -1  1  1  1  1  1 -1 -1  1 -1 -1 -1 -1  1 #> 3          18        3         1  1  1  1 -1  1  1 -1 -1 -1  1  1  1  1  1 -1 #> 4          17        4         1  1  1 -1  1  1 -1 -1 -1  1  1  1  1  1 -1 -1 #> 5           6        5         1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1 #> 6          19        6         1 -1  1  1  1 -1  1  1 -1 -1 -1  1  1  1  1  1 #> 7           2        7         1  1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 -1  1  1 #> 8          24        8         1 -1 -1  1 -1  1 -1  1  1  1 -1  1  1 -1 -1 -1 #> 9           3        9         1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 -1  1 #> 10          1       10         1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 -1  1  1 -1 #> 11         26       11         1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 #> 12         15       12         1 -1  1  1 -1 -1 -1  1  1  1  1  1 -1 -1  1 -1 #> 13         25       13         1 -1 -1 -1  1 -1  1 -1  1  1  1 -1  1  1 -1 -1 #> 14          8       14         1  1  1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1 #> 15          4       15         1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 -1 #> 16         20       16         1  1 -1  1  1  1 -1  1  1 -1 -1 -1  1  1  1  1 #> 17         23       17         1 -1  1 -1  1 -1  1  1  1 -1  1  1 -1 -1 -1  1 #> 18         10       18         1 -1  1  1  1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1 #> 19         13       19         1  1 -1 -1 -1  1  1  1  1  1 -1 -1  1 -1 -1 -1 #> 20         14       20         1  1  1 -1 -1 -1  1  1  1  1  1 -1 -1  1 -1 -1 #> 21          5       21         1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1  1  1 #> 22          9       22         1  1  1  1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 #> 23         22       23         1  1 -1  1 -1  1  1  1 -1  1  1 -1 -1 -1  1  1 #> 24          7       24         1  1  1  1 -1 -1  1 -1 -1 -1 -1  1 -1  1 -1  1 #> 25         21       25         1 -1  1 -1  1  1  1 -1  1  1 -1 -1 -1  1  1  1 #> 26         12       26         1 -1 -1 -1  1  1  1  1  1 -1 -1  1 -1 -1 -1 -1 #>     Q  R  S  T  U  V  W  X  Y  Z  y #> 1  -1 -1 -1 -1  1 -1  1 -1  1  1 NA #> 2  -1  1 -1  1  1  1 -1  1  1 -1 NA #> 3  -1  1 -1 -1 -1 -1  1 -1  1 -1 NA #> 4   1 -1 -1 -1 -1  1 -1  1 -1  1 NA #> 5   1 -1  1  1 -1 -1 -1  1  1  1 NA #> 6  -1 -1  1 -1 -1 -1 -1  1 -1  1 NA #> 7  -1 -1 -1  1  1  1  1  1 -1 -1 NA #> 8   1  1  1  1  1 -1 -1  1 -1 -1 NA #> 9   1 -1 -1 -1  1  1  1  1  1 -1 NA #> 10 -1 -1  1  1  1  1  1 -1 -1  1 NA #> 11 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 NA #> 12 -1 -1 -1  1 -1  1 -1  1  1  1 NA #> 13 -1  1  1  1  1  1 -1 -1  1 -1 NA #> 14  1  1  1 -1  1  1 -1 -1 -1  1 NA #> 15  1  1 -1 -1 -1  1  1  1  1  1 NA #> 16  1 -1 -1  1 -1 -1 -1 -1  1 -1 NA #> 17  1  1  1  1 -1 -1  1 -1 -1 -1 NA #> 18  1 -1  1  1  1 -1  1  1 -1 -1 NA #> 19 -1  1 -1  1 -1  1  1  1 -1  1 NA #> 20 -1 -1  1 -1  1 -1  1  1  1 -1 NA #> 21 -1  1  1 -1 -1 -1  1  1  1  1 NA #> 22 -1  1  1  1 -1  1  1 -1 -1 -1 NA #> 23  1  1  1 -1 -1  1 -1 -1 -1 -1 NA #> 24  1  1 -1  1  1 -1 -1 -1  1  1 NA #> 25  1  1 -1 -1  1 -1 -1 -1 -1  1 NA #> 26  1 -1  1 -1  1  1  1 -1  1  1 NA #>  #> ----------- # gageLin Design A=c(2.7,2.5,2.4,2.5,2.7,2.3,2.5,2.5,2.4,2.4,2.6,2.4) B=c(5.1,3.9,4.2,5,3.8,3.9,3.9,3.9,3.9,4,4.1,3.8) C=c(5.8,5.7,5.9,5.9,6,6.1,6,6.1,6.4,6.3,6,6.1) D=c(7.6,7.7,7.8,7.7,7.8,7.8,7.8,7.7,7.8,7.5,7.6,7.7) E=c(9.1,9.3,9.5,9.3,9.4,9.5,9.5,9.5,9.6,9.2,9.3,9.4)  test=gageLinDesign(ref=c(2,4,6,8,10),n=12) Messungen=data.frame(rbind(A,B,C,D,E)) test$response(Messungen) test$summary() #> ---------------------- #>   Part Ref  X1  X2  X3  X4  X5  X6  X7  X8  X9 X10 X11 X12 #> A    1   2 2.7 2.5 2.4 2.5 2.7 2.3 2.5 2.5 2.4 2.4 2.6 2.4 #> B    2   4 5.1 3.9 4.2 5.0 3.8 3.9 3.9 3.9 3.9 4.0 4.1 3.8 #> C    3   6 5.8 5.7 5.9 5.9 6.0 6.1 6.0 6.1 6.4 6.3 6.0 6.1 #> D    4   8 7.6 7.7 7.8 7.7 7.8 7.8 7.8 7.7 7.8 7.5 7.6 7.7 #> E    5  10 9.1 9.3 9.5 9.3 9.4 9.5 9.5 9.5 9.6 9.2 9.3 9.4 #> ----------------------  MSALin=gageLin(test,lty=c(3,4), plot = FALSE) #> ---------------------- #> BIAS: #>     X1   X2   X3   X4   X5   X6   X7   X8   X9  X10  X11  X12 #> A  0.7  0.5  0.4  0.5  0.7  0.3  0.5  0.5  0.4  0.4  0.6  0.4 #> B  1.1 -0.1  0.2  1.0 -0.2 -0.1 -0.1 -0.1 -0.1  0.0  0.1 -0.2 #> C -0.2 -0.3 -0.1 -0.1  0.0  0.1  0.0  0.1  0.4  0.3  0.0  0.1 #> D -0.4 -0.3 -0.2 -0.3 -0.2 -0.2 -0.2 -0.3 -0.2 -0.5 -0.4 -0.3 #> E -0.9 -0.7 -0.5 -0.7 -0.6 -0.5 -0.5 -0.5 -0.4 -0.8 -0.7 -0.6 #> ---------------------- #> MEAN OF BIAS: #>          A          B          C          D          E  #>  0.4916667  0.1250000  0.0250000 -0.2916667 -0.6166667  #> ---------------------- #> LINEAR MODEL: #>  #> Call: #> lm(formula = BIAS ~ ref) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.41000 -0.12000  0.01667  0.11667  0.89000  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.73667    0.07252   10.16 1.73e-14 *** #> ref         -0.13167    0.01093  -12.04  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.2395 on 58 degrees of freedom #> Multiple R-squared:  0.7143, Adjusted R-squared:  0.7094  #> F-statistic:   145 on 1 and 58 DF,  p-value: < 2.2e-16 #>  #> ---------------------- #> LINEARITY:  #>   13.16667 MSALin$plot()"},{"path":"https://fabianenc.github.io/r6qualitytools/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"R6-Based Statistical Methods for Quality Science","text":"encounter issues questions, please file issue reproducible example GitHub repo.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":null,"dir":"Reference","previous_headings":"","what":"Distr-class: Class `Distr` — Distr","title":"Distr-class: Class `Distr` — Distr","text":"R6 Class Distribution Objects","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Distr-class: Class `Distr` — Distr","text":"x Numeric vector data values. name Character string representing name distribution. parameters List parameters distribution. sd Numeric value representing standard deviation distribution. n Numeric value representing sample size. loglik Numeric value representing log-likelihood.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Distr-class: Class `Distr` — Distr","text":"Distr$new() Distr$plot() Distr$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Distr-class: Class `Distr` — Distr","text":"Initialize fiels `Distribution` object","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distr-class: Class `Distr` — Distr","text":"","code":"Distr$new(x, name, parameters, sd, n, loglik)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distr-class: Class `Distr` — Distr","text":"x Numeric vector data values. name Character string representing name distribution. parameters List parameters distribution. sd Numeric value representing standard deviation distribution. n Numeric value representing sample size. loglik Numeric value representing log-likelihood.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"Distr-class: Class `Distr` — Distr","text":"Plot distribution histogram fitted density curve.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Distr-class: Class `Distr` — Distr","text":"","code":"Distr$plot(   main = NULL,   xlab = NULL,   xlim = NULL,   xlim.t = TRUE,   ylab = NULL,   line.col = \"red\",   fill.col = \"lightblue\",   border.col = \"black\",   box = TRUE,   line.width = 1 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distr-class: Class `Distr` — Distr","text":"main Character string main title plot. Defaults name distribution. xlab Character string x-axis label. Defaults \"x\". xlim Numeric vector specifying x-axis limits. xlim.t Logical value specifyind change xlim default. ylab Character string y-axis label. Defaults \"Density\". line.col Character string color plot line. Default \"red\". fill.col Character string color fill histogram plot line. Default \"lightblue\". border.col Character string color border fill histogram plot line. Default \"black\". box Logical value indicating whether draw box parameters plot. Default TRUE. line.width Numeric value specifying width plot line. Default 1.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Distr-class: Class `Distr` — Distr","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Distr-class: Class `Distr` — Distr","text":"","code":"Distr$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distr-class: Class `Distr` — Distr","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/Distr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distr-class: Class `Distr` — Distr","text":"","code":"# Normal set.seed(123) data1 <- rnorm(100, mean = 5, sd = 2) parameters1 <- list(mean = 5, sd = 2) distr1 <- Distr$new(x = data1, name = \"normal\", parameters = parameters1,                     sd = 2, n = 100, loglik = -120) distr1$plot()   # Log-normal data2 <- rlnorm(100, meanlog = 1, sdlog = 0.5) parameters2 <- list(meanlog = 1, sdlog = 0.5) distr2 <- Distr$new(x = data2, name = \"log-normal\", parameters = parameters2,                     sd = 0.5, n = 100, loglik = -150) distr2$plot()   # Geometric data3 <- rgeom(100, prob = 0.3) parameters3 <- list(prob = 0.3) distr3 <- Distr$new(x = data3, name = \"geometric\", parameters = parameters3,                     sd = sqrt((1 - 0.3) / (0.3^2)), n = 100, loglik = -80) distr3$plot()   # Exponential data4 <- rexp(100, rate = 0.2) parameters4 <- list(rate = 0.2) distr4 <- Distr$new(x = data4, name = \"exponential\", parameters = parameters4,                     sd = 1 / 0.2, n = 100, loglik = -110) distr4$plot()   # Poisson data5 <- rpois(100, lambda = 3) parameters5 <- list(lambda = 3) distr5 <- Distr$new(x = data5, name = \"poisson\", parameters = parameters5,                     sd = sqrt(3), n = 100, loglik = -150) distr5$plot()   # Chi-square data6 <- rchisq(100, df = 5) parameters6 <- list(df = 5) distr6 <- Distr$new(x = data6, name = \"chi-squared\", parameters = parameters6,                     sd = sqrt(2 * 5), n = 100, loglik = -130) distr6$plot()   # Logistic data7 <- rlogis(100, location = 0, scale = 1) parameters7 <- list(location = 0, scale = 1) distr7 <- Distr$new(x = data7, name = \"logistic\", parameters = parameters7,                     sd = 1 * sqrt(pi^2 / 3), n = 100, loglik = -140) distr7$plot()   # Gamma data8 <- rgamma(100, shape = 2, rate = 0.5) parameters8 <- list(shape = 2, rate = 0.5) distr8 <- Distr$new(x = data8, name = \"gamma\", parameters = parameters8,                     sd = sqrt(2 / (0.5^2)), n = 100, loglik = -120) distr8$plot()   # f data9 <- rf(100, df1 = 5, df2 = 10) parameters9 <- list(df1 = 5, df2 = 10) df1 <- 5 df2 <- 10 distr9 <- Distr$new(x = data9, name = \"f\", parameters = parameters9,                     sd = sqrt(((df2^2 * (df1 + df2 - 2)) /                                (df1 * (df2 - 2)^2 * (df2 - 4)))),                     n = 100, loglik = -150) distr9$plot()   # t data10 <- rt(100, df = 10) parameters10 <- list(df = 10) distr10 <- Distr$new(x = data10, name = \"t\", parameters = parameters10,                      sd = sqrt(10 / (10 - 2)), n = 100, loglik = -120) distr10$plot()   # negative binomial data11 <- rnbinom(100, size = 5, prob = 0.3) parameters11 <- list(size = 5, prob = 0.3) distr11 <- Distr$new(x = data11, name = \"negative binomial\",                      parameters = parameters11,                      sd = sqrt(5 * (1 - 0.3) / (0.3^2)),                      n = 100, loglik = -130) distr11$plot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":null,"dir":"Reference","previous_headings":"","what":"DistrCollection-class: Class `DistrCollection` — DistrCollection","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"R6 Class Managing Collection Distribution Objects","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"distr List Distr objects.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"DistrCollection$new() DistrCollection$add() DistrCollection$get() DistrCollection$print() DistrCollection$summary() DistrCollection$plot() DistrCollection$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Initialize fields DistrCollection object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$new()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-add-","dir":"Reference","previous_headings":"","what":"Method add()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Add Distr object collection.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$add(distr)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"distr Distr object add collection.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Get Distr object collection index.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$get(i)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Integer index Distr object retrieve.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Distr object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Print summary distributions collection.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Summarize goodness fit distributions collection.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"data frame distribution names, Anderson-Darling test statistics, p-values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"Plot distributions collection.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$plot(   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL,   line.col = \"red\",   fill.col = \"lightblue\",   border.col = \"black\",   line.width = 1,   box = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"xlab Character string x-axis label. ylab Character string y-axis label. xlim Numeric vector specifying x-axis limits. ylim Numeric vector specifying y-axis limits. line.col Character string color plot line. Default \"red\". fill.col Character string color histogram fill. Default \"lightblue\". border.col Character string color histogram border. Default \"black\". line.width Numeric value specifying width plot line. Default 1. box Logical value indicating whether draw box parameters plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"DistrCollection$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/DistrCollection.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DistrCollection-class: Class `DistrCollection` — DistrCollection","text":"","code":"set.seed(123) data1 <- rnorm(100, mean = 5, sd = 2) parameters1 <- list(mean = 5, sd = 2) distr1 <- Distr$new(x = data1, name = \"normal\",                     parameters = parameters1, sd = 2,                     n = 100, loglik = -120)  data2 <- rpois(100, lambda = 3) parameters2 <- list(lambda = 3) distr2 <- Distr$new(x = data2, name = \"poisson\",                     parameters = parameters2, sd = sqrt(3),                     n = 100, loglik = -150) collection <- DistrCollection$new() collection$add(distr1) collection$add(distr2) collection$summary() #>  #> ------ Fitted Distribution and estimated parameters ------ #>  #> fitted distribution is normal : #> $mean #> [1] 5 #>  #> $sd #> [1] 2 #>  #>  #> fitted distribution is poisson : #> $lambda #> [1] 3 #>  #>  #>  #> ------ Goodness of Fit - Anderson Darling Test ------ #>  #>   Distribution     A p.value #> 1       normal 0.182  0.9104 #> 2      poisson 5.733      NA collection$plot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":null,"dir":"Reference","previous_headings":"","what":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"Maximum-likelihood fitting univariate distributions, allowing parameters held fixed desired.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"","code":"FitDistr(x, densfun, start, ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"x numeric vector length least one containing finite values. Either character string function returning density evaluated first argument. densfun character string specifying density function used fitting distribution. Distributions `\"beta\"`, `\"cauchy\"`, `\"chi-squared\"`, `\"exponential\"`, `\"gamma\"`, `\"geometric\"`, `\"log-normal\"`, `\"lognormal\"`, `\"logistic\"`, `\"negative binomial\"`, `\"normal\"`, `\"Poisson\"`, `\"t\"` \"weibull\" recognised, case ignored. start named list giving parameters optimized initial values. can omitted named distributions must others (see Details). ... Additional parameters, either `densfun` `optim`. particular, can used specify bounds via `lower` `upper` . arguments `densfun` (density function corresponding character-string specification) included held fixed.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"function `FitDistr` returns object class `fitdistr`, list containing: estimate named vector parameter estimates. sd named vector estimated standard errors parameters. vcov estimated variance-covariance matrix parameter estimates. loglik log-likelihood fitted model. n length vector.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"Normal, log-Normal, geometric, exponential Poisson distributions closed-form MLEs (exact standard errors) used, `start` supplied. distributions, direct optimization log-likelihood performed using `optim`. estimated standard errors taken observed information matrix, calculated numerical approximation. one-dimensional problems Nelder-Mead method used multi-dimensional problems BFGS method, unless arguments named `lower` `upper` supplied (`L-BFGS-B` used) `method` supplied explicitly. `\"t\"` named distribution density taken location-scale family location `m` scale `s`. following named distributions, reasonable starting values computed `start` omitted partially specified: `\"cauchy\"`, `\"gamma\"`, `\"logistic\"`, `\"negative binomial\"` (parametrized mu size), `\"t\"` `\"weibull\"`. Note starting values may good enough fit poor: particular resistant outliers unless fitted distribution long-tailed. `print`, `coef`, `vcov` `logLik` methods class `\"FitDistr\"`.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/FitDistr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FitDistr: Maximum-likelihood Fitting of Univariate Distributions — FitDistr","text":"","code":"set.seed(123) x = rgamma(100, shape = 5, rate = 0.1) FitDistr(x, \"gamma\") #> $estimate #>     shape      rate  #> 6.4869913 0.1365106  #>  #> $sd #>    shape     rate  #> 0.894601 0.019573  #>  #> $vcov #>            shape         rate #> shape 0.80031094 0.0168407776 #> rate  0.01684078 0.0003831024 #>  #> $loglik #> [1] -429.1792 #>  #> $n #> [1] 100 #>  #> attr(,\"class\") #> [1] \"FitDistr\"  # Now do this directly with more control. FitDistr(x, dgamma, list(shape = 1, rate = 0.1), lower = 0.001) #> $estimate #>     shape      rate  #> 6.4868655 0.1365101  #>  #> $sd #>      shape       rate  #> 0.89438949 0.01956818  #>  #> $vcov #>            shape         rate #> shape 0.79993257 0.0168323391 #> rate  0.01683234 0.0003829136 #>  #> $loglik #> [1] -429.1792 #>  #> $n #> [1] 100 #>  #> attr(,\"class\") #> [1] \"FitDistr\"  set.seed(123) x2 = rt(250, df = 9) FitDistr(x2, \"t\", df = 9) #> $estimate #>           m           s  #> -0.01069496  1.04410551  #>  #> $sd #>          m          s  #> 0.07222623 0.05434369  #>  #> $vcov #>               m             s #> m  5.216629e-03 -2.155702e-05 #> s -2.155702e-05  2.953237e-03 #>  #> $loglik #> [1] -395.4873 #>  #> $n #> [1] 250 #>  #> attr(,\"class\") #> [1] \"FitDistr\"  # Allow df to vary: not a very good idea! FitDistr(x2, \"t\") #> $estimate #>            m            s           df  #> -0.009653468  1.006167671  6.627292033  #>  #> $sd #>          m          s         df  #> 0.07147271 0.07707297 2.71033164  #>  #> $vcov #>                m             s           df #> m   5.108348e-03 -5.932325e-05 -0.002431418 #> s  -5.932325e-05  5.940243e-03  0.148215915 #> df -2.431418e-03  1.482159e-01  7.345897580 #>  #> $loglik #> [1] -395.26 #>  #> $n #> [1] 250 #>  #> attr(,\"class\") #> [1] \"FitDistr\"  # Now do fixed-df fit directly with more control. mydt = function(x, m, s, df) dt((x-m)/s, df)/s FitDistr(x2, mydt, list(m = 0, s = 1), df = 9, lower = c(-Inf, 0)) #> $estimate #>           m           s  #> -0.01069635  1.04409435  #>  #> $sd #>          m          s  #> 0.07222562 0.05434249  #>  #> $vcov #>               m             s #> m  5.216541e-03 -2.156228e-05 #> s -2.156228e-05  2.953107e-03 #>  #> $loglik #> [1] -395.4873 #>  #> $n #> [1] 250 #>  #> attr(,\"class\") #> [1] \"FitDistr\"  set.seed(123) x3 = rweibull(100, shape = 4, scale = 100) FitDistr(x3, \"weibull\") #> $estimate #>     shape     scale  #>  4.080342 99.983688  #>  #> $sd #>     shape     scale  #> 0.3126797 2.5819679  #>  #> $vcov #>            shape     scale #> shape 0.09776862 0.2542929 #> scale 0.25429293 6.6665584 #>  #> $loglik #> [1] -462.6639 #>  #> $n #> [1] 100 #>  #> attr(,\"class\") #> [1] \"FitDistr\""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":null,"dir":"Reference","previous_headings":"","what":"MSALinearity-class: Class `MSALinearity` — MSALinearity","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"R6 class performing Measurement System Analysis (MSA) Linearity studies.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"X data frame containing independent variable(s) used linearity study. Y data frame containing dependent variable(s) responses measured linearity study. model linear model object resulting linearity analysis. conf.level numeric value specifying confidence level linearity analysis. 0 1 (e.g., 0.95 95% confidence level). Linearity list data frame containing results linearity study, including linearity value associated statistics. GageName character string specifying name gage measurement system analysis. GageTolerance numeric value specifying tolerance gage measurement system. DateOfStudy character string Date object indicating date linearity study conducted. PersonResponsible character string specifying name person responsible linearity study. Comments character string additional comments notes linearity study. facNames character vector specifying names factors involved study, .","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"MSALinearity$response() MSALinearity$summary() MSALinearity$plot() MSALinearity$print() MSALinearity$.data.frame() MSALinearity$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method response()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"Get set response object class MSALinearity.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"value New response, missing value get response.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"Methods function summary Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"Plots measurement system, including individual biases, mean bias, regression line confidence intervals.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$plot(ylim, col, pch, lty = c(1, 2))"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"ylim numeric vector specifying limits y-axis. provided, limits automatically calculated based data. col vector specifying colors used different plot elements. pch numeric vector specifying plotting characters (symbols) individual data points mean bias points. lty numeric vector specifying line types regression line confidence intervals. default c(1, 2).","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"Methods function print Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"Return data frame information object MSALinearity.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"","code":"MSALinearity$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/MSALinearity.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"MSALinearity-class: Class `MSALinearity` — MSALinearity","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":null,"dir":"Reference","previous_headings":"","what":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"Performs Anderson-Darling test univariate distributions option bootstrap-based p-value determination. also allows p-value determination using tabled critical values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"","code":"adSim(x, distribution = \"normal\", b = 10000)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"x numeric vector. distribution character string specifying distribution test. Recognized distributions include `cauchy`, `exponential`, `gumbel`, `gamma`, `log-normal`, `lognormal`, `logistic`, `normal`, `weibull`. b numeric value indicating number bootstraps perform. Allowed values range 1000 1,000,000. b set NA, Anderson-Darling test applied without simulation. Note higher values b can significantly increase computation time, potentially taking hours depending distribution, sample size, computer system.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"list containing following components: distribution distribution Anderson-Darling test applied. parameter_estimation estimated parameters distribution. Anderson_Darling value Anderson-Darling test statistic. p_value corresponding p-value, either simulated tabled values. critical_values critical values corresponding 0.75, 0.90, 0.95, 0.975, 0.99 quantiles, either simulated tables. simAD bootstrap-based Anderson-Darling distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"function first estimates parameters tested distribution, typically using Maximum-Likelihood Estimation (MLE) via FitDistr function. normal log-normal distributions, parameters estimated mean standard deviation. Cauchy distribution parameters fitted sums weighted order statistic using tabled critical values. Anderson-Darling statistic calculated based estimated parameters. Parametric bootstrapping generates distribution Anderson-Darling test statistic, used determine p-value. simulation-based Anderson-Darling distribution corresponding critical values selected quantiles can printed. simulation performed, p-value obtained tabled critical values, although exact expressions exist except log-normal, normal, exponential distributions.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/adSim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"adSim: Bootstrap-based Anderson-Darling Test for Univariate — adSim","text":"","code":"x <- rnorm(25, 32, 2) adSim(x) #>  #>    ... simulating the Anderson-Darling distribution by10000bootstraps fornormaldistribution... #>  #> $distribution #> [1] \"normal\" #>  #> $parameter_estimation #>      mean        sd  #> 32.020482  1.944843  #>  #> $Anderson_Darling #> [1] 0.1704118 #>  #> $p_value #> [1] 0.9437 #>  adSim(x, \"logistic\", 2000) #>  #>    ... simulating the Anderson-Darling distribution by2000bootstraps forlogisticdistribution... #>  #> $distribution #> [1] \"logistic\" #>  #> $parameter_estimation #> $parameter_estimation$estimate #> location    scale  #> 32.03572  1.06294  #>  #> $parameter_estimation$sd #>  location     scale  #> 0.3675452 0.1787948  #>  #>  #> $Anderson_Darling #> [1] 0.1121003 #>  #> $p_value #> [1] 0.995 #>  adSim(x, \"cauchy\", NA) #> $distribution #> [1] \"cauchy\" #>  #> $parameter_estimation #>  location     scale  #> 33.351391  1.160257  #>  #> $Anderson_Darling #> [1] 5.551802 #>  #> $p_value #> [1] \"<= 0.05\" #>  adSim(x, \"exponential\", 2000) #>  #>    ... simulating the Anderson-Darling distribution by2000bootstraps forexponentialdistribution... #>  #> $distribution #> [1] \"exponential\" #>  #> $parameter_estimation #> $parameter_estimation$estimate #>       rate  #> 0.03123001  #>  #> $parameter_estimation$sd #>        rate  #> 0.006246002  #>  #>  #> $Anderson_Darling #> [1] 10.19722 #>  #> $p_value #> [1] 0 #>  adSim(x, \"gumbel\", 2000) #>  #>    ... simulating the Anderson-Darling distribution by2000bootstraps forgumbeldistribution... #>  #> $distribution #> [1] \"gumbel\" #>  #> $parameter_estimation #>  location     scale  #> 31.052483  1.974123  #>  #> $Anderson_Darling #> [1] 0.6307183 #>  #> $p_value #> [1] 0.104 #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/aliasTable.html","id":null,"dir":"Reference","previous_headings":"","what":"aliasTable: Display an alias table — aliasTable","title":"aliasTable: Display an alias table — aliasTable","text":"function generates alias table factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/aliasTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aliasTable: Display an alias table — aliasTable","text":"","code":"aliasTable(fdo, degree, print = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/aliasTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"aliasTable: Display an alias table — aliasTable","text":"fdo object class facDesign.c. degree Numeric value specifying degree interaction .e. degree=3 means threeway interactions. print TRUE, alias table printed. default print set TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/aliasTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"aliasTable: Display an alias table — aliasTable","text":"function aliasTable returns matrix indicating aliased effects.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/aliasTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aliasTable: Display an alias table — aliasTable","text":"","code":"# Create a fractional factorial design dfrac <- fracDesign(k = 3, gen = \"C = AB\") # Display the alias table for the fractional factorial design aliasTable(dfrac) #>          C AC BC ABC #> Identity 0  0  0   1 #> A        0  0  1   0 #> B        0  1  0   0 #> AB       1  0  0   0"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/as.data.frame_facDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","title":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","text":"Converts object class facDesign.c data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/as.data.frame_facDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","text":"","code":"as.data.frame_facDesign(dfac)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/as.data.frame_facDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","text":"dfac object class facDesign.c want convert data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/as.data.frame_facDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","text":"function .data.frame_facDesign returns data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/as.data.frame_facDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"as.data.frame_facDesign: Coerce to a data.frame — as.data.frame_facDesign","text":"","code":"fdo <- fracDesign(k = 2, replicates = 3, centerCube = 4) as.data.frame_facDesign(fdo) #>    StandOrder RunOrder Block  A  B  y #> 16         16        1     1  0  0 NA #> 11         11        2     1 -1  1 NA #> 14         14        3     1  0  0 NA #> 10         10        4     1  1 -1 NA #> 4           4        5     1  1  1 NA #> 3           3        6     1 -1  1 NA #> 15         15        7     1  0  0 NA #> 9           9        8     1 -1 -1 NA #> 6           6        9     1  1 -1 NA #> 2           2       10     1  1 -1 NA #> 12         12       11     1  1  1 NA #> 1           1       12     1 -1 -1 NA #> 7           7       13     1 -1  1 NA #> 8           8       14     1  1  1 NA #> 13         13       15     1  0  0 NA #> 5           5       16     1 -1 -1 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/blocking.html","id":null,"dir":"Reference","previous_headings":"","what":"blocking: Blocking — blocking","title":"blocking: Blocking — blocking","text":"Blocks given factorial response surface design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/blocking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"blocking: Blocking — blocking","text":"","code":"blocking(fdo, blocks, random.seed, useTable = \"rsm\", gen)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/blocking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"blocking: Blocking — blocking","text":"fdo object class facDesign.c. blocks Numeric value giving number blocks. random.seed Numeric value generate repeatable results randomization within blocks. useTable Character indicating table use. following options accepted: `rms`: table reference `calc`: table calculated package gen Giving generator used.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/blocking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"blocking: Blocking — blocking","text":"function blocking returns object class facDesign.c blocking structure.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/blocking.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"blocking: Blocking — blocking","text":"","code":"# Example 1 #Create a 2^3 full factorial design fdo <- facDesign(k = 3) # Apply blocking to the design with 2 blocks blocking(fdo, 2) #>   StandOrder RunOrder Block  A  B  C  y #> 7          7        1     1 -1  1  1 NA #> 4          4        2     1  1  1 -1 NA #> 6          6        3     1  1 -1  1 NA #> 1          1        4     1 -1 -1 -1 NA #> 5          5        5     2 -1 -1  1 NA #> 2          2        6     2  1 -1 -1 NA #> 8          8        7     2  1  1  1 NA #> 3          3        8     2 -1  1 -1 NA  # Example 2 #Create a response surface design for 3 factors fdo <- rsmDesign(k = 3) # Apply blocking to the design with 3 blocks (1 block for star part and 2 blocks for the cube part) blocking(fdo, 3) #>    StandOrd RunOrder Block      A      B      C  y #> 4         4        1     1  1.000  1.000 -1.000 NA #> 1         1        2     1 -1.000 -1.000 -1.000 NA #> 7         7        3     1 -1.000  1.000  1.000 NA #> 9         9        4     1  0.000  0.000  0.000 NA #> 6         6        5     1  1.000 -1.000  1.000 NA #> 5         5        6     2 -1.000 -1.000  1.000 NA #> 3         3        7     2 -1.000  1.000 -1.000 NA #> 8         8        8     2  1.000  1.000  1.000 NA #> 2         2        9     2  1.000 -1.000 -1.000 NA #> 10       10       10     2  0.000  0.000  0.000 NA #> 12       12       11     3  1.682  0.000  0.000 NA #> 14       14       12     3  0.000  1.682  0.000 NA #> 16       16       13     3  0.000  0.000  1.682 NA #> 17       17       14     3  0.000  0.000  0.000 NA #> 11       11       15     3 -1.682  0.000  0.000 NA #> 13       13       16     3  0.000 -1.682  0.000 NA #> 15       15       17     3  0.000  0.000 -1.682 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":null,"dir":"Reference","previous_headings":"","what":"cg: Function to calculate and visualize the gage capability. — cg","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"Function visualize given values measurement run chart histogram. Furthermore centralized Gage potential index Cg non-centralized Gage Capability index Cgk calculated displayed.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"","code":"cg(   x,   target,   tolerance,   ref.interval,   facCg,   facCgk,   n = 0.2,   col,   pch,   xlim,   ylim,   conf.level = 0.95 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"x vector containing measured values. target numeric value giving expected target value x-values. tolerance Vector length 2 giving lower upper specification limits. ref.interval Numeric value giving confidence interval calculation based. default based 6 sigma methodology. Regarding normal distribution relates pnorm(3) - pnorm(-3) exactly 99.73002 percent. calculation based another sigma value ref.interval needs adjusted. give example: sigma-level given 5.15 ref.interval relates pnorm(5.15/2)-pnorm(-5.15/2) exactly 0.989976 percent. facCg Numeric value factor calculation gage potential index. default value facCg 0.2. facCgk Numeric value factor calculation gage capability index. default value facCgk 0.1. n Numeric value 0 1 giving percentage tolerance field (values upper lower specification limits given tolerance) values x positioned. Limit lines drawn. Default value 0.2. col Character numeric value specifying color curve run chart. Default `black`. pch Numeric character specifying plotting symbol. Default 19 (filled circle). xlim Numeric vector length 2 specifying limits x-axis. Default NULL means limits set automatically. ylim Numeric vector length 2 specifying limits y-axis. Default NULL means limits set automatically. conf.level Confidence level internal t.test checking significance bias target mean x. default value 0.95. result t.test shown histogram left side.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"function cg returns list numeric values. first element contains calculated centralized gage potential index Cg second contains non-centralized gage capability index Cgk.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"calculation potential actual gage capability based following formula: Cg = (facCg * tolerance[2]-tolerance[1])/ref.interval Cgk = (facCgk * abs(target-mean(x))/(ref.interval/2) usage historical process variation preferred values tolerance tolerance must adjusted manually. means case 6 sigma methodology example, tolerance = 6 * sigma[process].","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg: Function to calculate and visualize the gage capability. — cg","text":"","code":"x <- c(9.991, 10.013, 10.001, 10.007, 10.010, 10.013, 10.008,9.992,        10.017, 10.005, 10.005, 10.002, 10.017, 10.005, 10.002, 9.996,        10.011, 10.009, 10.006, 10.008, 10.003, 10.002, 10.006, 10.010, 10.013)  cg(x = x, target = 10.003, tolerance = c(9.903, 10.103)) #> Warning: No shared levels found between `names(values)` of the manual scale and the #> data's colour values."},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":null,"dir":"Reference","previous_headings":"","what":"cg_HistChart — cg_HistChart","title":"cg_HistChart — cg_HistChart","text":"Function visualize given values measurement histogram","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg_HistChart — cg_HistChart","text":"","code":"cg_HistChart(   x,   target,   tolerance,   ref.interval,   facCg,   facCgk,   n = 0.2,   col,   xlim,   ylim,   main,   conf.level = 0.95,   cgOut = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg_HistChart — cg_HistChart","text":"x vector containing measured values. target numeric value giving expected target value x-values. tolerance Vector length 2 giving lower upper specification limits. ref.interval Numeric value giving confidence interval calculation based. default based 6 sigma methodology. Regarding normal distribution relates pnorm(3) - pnorm(-3) exactly 99.73002 percent. calculation based another sigma value ref.interval needs adjusted. give example: sigma-level given 5.15 ref.interval relates pnorm(5.15/2)-pnorm(-5.15/2) exactly 0.989976 percent. facCg Numeric value factor calculation gage potential index. default Value facCg 0.2. facCgk Numeric value factor calculation gage capability index. default value facCgk 0.1. n Numeric value 0 1 giving percentage tolerance field (values upper lower specification limits given tolerance) values x positioned. Limit lines drawn. Default value 0.2. col Character numeric value specifying color histogram. Default `black`. xlim Numeric vector length 2 specifying limits x-axis. Default NULL means limits set automatically. ylim Numeric vector length 2 specifying limits y-axis. Default NULL means limits set automatically. main Character string specifying title plot. Default `Histogram x - target`. conf.level Confidence level internal t.test checking significance bias target mean x. default value 0.95. cgOut Logical value deciding whether Cg Cgk values plotted legend. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cg_HistChart — cg_HistChart","text":"function cg_HistChart returns list numeric values. first element contains calculated centralized gage potential index Cg second contains non-centralized gage capability index Cgk.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cg_HistChart — cg_HistChart","text":"calculation potential actual gage capability based following formulae: Cg = (facCg * tolerance[2]-tolerance[1])/ref.interval Cgk = (facCgk * abs(target-mean(x))/(ref.interval/2) usage historical process variation preferred values tolerance tolerance must adjusted manually. means case 6 sigma methodology example, tolerance = 6 * sigma[process].","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_HistChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg_HistChart — cg_HistChart","text":"","code":"x <- c(9.991, 10.013, 10.001, 10.007, 10.010, 10.013, 10.008,9.992,        10.017, 10.005, 10.005, 10.002, 10.017, 10.005, 10.002, 9.996,        10.011, 10.009, 10.006, 10.008, 10.003, 10.002, 10.006, 10.010, 10.013)  cg_HistChart(x = x, target = 10.003, tolerance = c(9.903, 10.103))"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":null,"dir":"Reference","previous_headings":"","what":"cg_RunChart — cg_RunChart","title":"cg_RunChart — cg_RunChart","text":"Function visualize given values measurement Run Chart","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg_RunChart — cg_RunChart","text":"","code":"cg_RunChart(   x,   target,   tolerance,   ref.interval,   facCg,   facCgk,   n = 0.2,   col = \"black\",   pch = 19,   xlim = NULL,   ylim = NULL,   main = \"Run Chart\",   conf.level = 0.95,   cgOut = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg_RunChart — cg_RunChart","text":"x vector containing measured values. target numeric value giving expected target value x-values. tolerance Vector length 2 giving lower upper specification limits. ref.interval Numeric value giving confidence interval calculation based. default based 6 sigma methodology. Regarding normal distribution relates pnorm(3) - pnorm(-3) exactly 99.73002 percent. calculation based another sigma value ref.interval needs adjusted. give example: sigma-level given 5.15 ref.interval relates pnorm(5.15/2)-pnorm(-5.15/2) exactly 0.989976 percent. facCg Numeric value factor calculation gage potential index. default Value facCg 0.2. facCgk Numeric value factor calculation gage capability index. default value facCgk 0.1. n Numeric value 0 1 giving percentage tolerance field (values upper lower specification limits given tolerance) values x positioned. Limit lines drawn. Default value 0.2. col Character numeric value specifying color curve run chart. Default `black`. pch Numeric character specifying plotting symbol. Default 19 (filled circle). xlim Numeric vector length 2 specifying limits x-axis. Default NULL means limits set automatically. ylim Numeric vector length 2 specifying limits y-axis. Default NULL means limits set automatically. main Character string specifying title plot. Default `Run Chart`. conf.level Confidence level internal t.test checking significance bias target mean x. default value 0.95. result t.test shown histogram left side. cgOut Logical value deciding whether Cg Cgk values plotted legend. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cg_RunChart — cg_RunChart","text":"function cg_RunChart returns list numeric values. first element contains calculated centralized gage potential index Cg second contains non-centralized gage capability index Cgk.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cg_RunChart — cg_RunChart","text":"calculation potential actual gage capability based following formulae: Cg = (facCg * tolerance[2]-tolerance[1])/ref.interval Cgk = (facCgk * abs(target-mean(x))/(ref.interval/2) usage historical process variation preferred values tolerance tolerance must adjusted manually. means case 6 sigma methodology example, tolerance = 6 * sigma[process].","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_RunChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg_RunChart — cg_RunChart","text":"","code":"x <- c(9.991, 10.013, 10.001, 10.007, 10.010, 10.013, 10.008,9.992,        10.017, 10.005, 10.005, 10.002, 10.017, 10.005, 10.002, 9.996,        10.011, 10.009, 10.006, 10.008, 10.003, 10.002, 10.006, 10.010, 10.013)  cg_RunChart(x = x, target = 10.003, tolerance = c(9.903, 10.103))"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":null,"dir":"Reference","previous_headings":"","what":"cg_ToleranceChart — cg_ToleranceChart","title":"cg_ToleranceChart — cg_ToleranceChart","text":"Function visualize given values measurement Tolerance View.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cg_ToleranceChart — cg_ToleranceChart","text":"","code":"cg_ToleranceChart(   x,   target,   tolerance,   ref.interval,   facCg,   facCgk,   n = 0.2,   col,   pch,   xlim,   ylim,   main,   conf.level = 0.95,   cgOut = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cg_ToleranceChart — cg_ToleranceChart","text":"x vector containing measured values. target numeric value giving expected target value x-values. tolerance Vector length 2 giving lower upper specification limits. ref.interval Numeric value giving confidence interval calculation based. default based 6 sigma methodology. Regarding normal distribution relates pnorm(3) - pnorm(-3) exactly 99.73002 percent. calculation based another sigma value ref.interval needs adjusted. give example: sigma-level given 5.15 ref.interval relates pnorm(5.15/2)-pnorm(-5.15/2) exactly 0.989976 percent. facCg Numeric value factor calculation gage potential index. default value facCg 0.2. facCgk Numeric value factor calculation gage capability index. default value facCgk 0.1. n Numeric value 0 1 giving percentage tolerance field (values upper lower specification limits given tolerance) values x positioned. Limit lines drawn. Default value 0.2. col Character numeric value specifying color line points tolerance view. Default `black`. pch Numeric character specifying plotting symbol. Default 19 (filled circle). xlim Numeric vector length 2 specifying limits x-axis. Default NULL means limits set automatically. ylim Numeric vector length 2 specifying limits y-axis. Default NULL means limits set automatically. main Character string specifying title plot. Default `Tolerance View`. conf.level Confidence level internal t.test checking significance bias target mean x. default value 0.95. cgOut Logical value deciding whether Cg Cgk values plotted legend. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cg_ToleranceChart — cg_ToleranceChart","text":"function cg_ToleranceChart returns list numeric values. first element contains calculated centralized gage potential index Cg second contains non-centralized gage capability index Cgk.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cg_ToleranceChart — cg_ToleranceChart","text":"calculation potential actual gage capability based following formulae: Cg = (facCg * tolerance[2]-tolerance[1])/ref.interval Cgk = (facCgk * abs(target-mean(x))/(ref.interval/2) usage historical process variation preferred values tolerance tolerance must adjusted manually. means case 6 sigma methodology example, tolerance = 6 * sigma[process].","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/cg_ToleranceChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cg_ToleranceChart — cg_ToleranceChart","text":"","code":"x <- c(9.991, 10.013, 10.001, 10.007, 10.010, 10.013, 10.008,9.992,        10.017, 10.005, 10.005, 10.002, 10.017, 10.005, 10.002, 9.996,        10.011, 10.009, 10.006, 10.008, 10.003, 10.002, 10.006, 10.010, 10.013)  cg_ToleranceChart(x = x, target = 10.003, tolerance = c(9.903, 10.103)) #> Warning: No shared levels found between `names(values)` of the manual scale and the #> data's colour values."},{"path":"https://fabianenc.github.io/r6qualitytools/reference/code2real.html","id":null,"dir":"Reference","previous_headings":"","what":"code2real: Coding — code2real","title":"code2real: Coding — code2real","text":"Function calculate real value coded value.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/code2real.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"code2real: Coding — code2real","text":"","code":"code2real(low, high, codedValue)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/code2real.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"code2real: Coding — code2real","text":"low Numeric value giving lower boundary. high Numeric value giving higher boundary. codedValue Numeric value giving coded value calculated.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/code2real.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"code2real: Coding — code2real","text":"function return real value coded value","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/code2real.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"code2real: Coding — code2real","text":"","code":"code2real(160, 200, 0) #> [1] 180"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/confounds.html","id":null,"dir":"Reference","previous_headings":"","what":"confounds: Confounded Effects — confounds","title":"confounds: Confounded Effects — confounds","text":"Function display confounded effects fractional factorial design human readable way.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/confounds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"confounds: Confounded Effects — confounds","text":"","code":"confounds(x, depth = 2)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/confounds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"confounds: Confounded Effects — confounds","text":"x object class facDesign.c. depth numeric value - depth-way confounded interactions printed","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/confounds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"confounds: Confounded Effects — confounds","text":"function returns summary factors confounded.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/confounds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"confounds: Confounded Effects — confounds","text":"","code":"vp.frac = fracDesign(k = 4, gen = \"D=ABC\") confounds(vp.frac,depth=5) #> Defining relations: #> I =  ABCD \t\tColumns: 1 2 3 4  #>  #> Resolution:  IV  #>  #> Alias Structure: #> A \tis confounded with\t BCD  #> B \tis confounded with\t ACD  #> C \tis confounded with\t ABD  #> D \tis confounded with\t ABC  #> AB \tis confounded with\t CD  #> AC \tis confounded with\t BD  #> AD \tis confounded with\t BC  #> ABCD \tis confounded with"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"contourPlot: Contour Plot — contourPlot","title":"contourPlot: Contour Plot — contourPlot","text":"Creates contour diagram object class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contourPlot: Contour Plot — contourPlot","text":"","code":"contourPlot(   x,   y,   z,   data = NULL,   xlim,   ylim,   main,   xlab,   ylab,   form = \"fit\",   col = 1,   steps,   fun,   plot = TRUE,   show.scale = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contourPlot: Contour Plot — contourPlot","text":"x Name providing Factor plot. y Name providing Factor B plot. z Name giving Response variable. data Needs object class facDesign.c contains names x, y, z. xlim Vector giving range x-axis. ylim Vector giving range y-axis. main Character string: title plot. xlab Character string: label x-axis. ylab Character string: label y-axis. form character string formula syntax `y~ x+y + x*y`. form character one following: `quadratic` `full` `interaction` `linear` `fit` `fit` takes formula fit facDesign.c object fdo. Quadratic higher orders given (Variable^2). default form set `fit`. col predefined (1, 2, 3 4) self defined colorRampPalette color used (.e. `red`). steps Number grid points per factor. default steps = 25. fun Function applied z desirability. plot Logical value indicating whether display plot. Default TRUE. show.scale Logical value indicating whether display color scale plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"contourPlot: Contour Plot — contourPlot","text":"function contourPlot returns invisible list containing: x - locations grid lines x values z measured. y - locations grid lines y values z measured. z - matrix containing values z plotted. plot - generated plot.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"contourPlot: Contour Plot — contourPlot","text":"","code":"fdo = rsmDesign(k = 3, blocks = 2) fdo$.response(data.frame(y = rnorm(fdo$nrow())))  #I - display linear fit contourPlot(A,B,y, data = fdo, form = \"linear\") #II - display full fit (i.e. effect, interactions and quadratic effects contourPlot(A,B,y, data = fdo, form = \"full\") #III - display a fit specified before fdo$set.fits(fdo$lm(y ~ B + I(A^2))) contourPlot(A,B,y, data = fdo, form = \"fit\") #IV - display a fit given directly contourPlot(A,B,y, data = fdo, form = \"y ~ A*B + I(A^2)\") #V - display a fit using a different colorRamp contourPlot(A,B,y, data = fdo, form = \"full\", col = 2) #VI - display a fit using a self defined colorRamp myColour = colorRampPalette(c(\"green\", \"gray\",\"blue\")) contourPlot(A,B,y, data = fdo, form = \"full\", col = myColour)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot3.html","id":null,"dir":"Reference","previous_headings":"","what":"contourPlot3: Ternary plot — contourPlot3","title":"contourPlot3: Ternary plot — contourPlot3","text":"function creates ternary plot (contour plot) mixture designs (.e. object class mixDesign).","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contourPlot3: Ternary plot — contourPlot3","text":"","code":"contourPlot3(   x,   y,   z,   response,   data = NULL,   main,   xlab,   ylab,   zlab,   form = \"linear\",   col = 1,   col.text,   axes = TRUE,   steps,   plot = TRUE,   show.scale = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"contourPlot3: Ternary plot — contourPlot3","text":"x Factor 1 mixDesign object. y Factor 2 mixDesign object. z Factor 3 mixDesign object. response response mixDesign object. data mixDesign object x,y,z response taken. main Character string specifying main title plot. xlab Character string specifying label x-axis. ylab Character string specifying label y-axis. zlab Character string specifying label z-axis. form character string formula syntax `y ~ + B + C`. form character string, one following: `linear` `quadratic` form influences output described reference listed . default, form set `linear`. col predefined value (1, 2, 3, 4) self-defined colorRampPalette specifying colors used plot. col.text character string specifying color axis labels. default value col.text '1'. axes logical value specifying whether axes plotted. default, axes set TRUE. steps numeric value specifying resolution plot, .e., number rows square matrix, also represents number grid points per factor. default, steps set 25. plot Logical value indicating whether display plot. Default TRUE. show.scale Logical value indicating whether display color scale plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"contourPlot3: Ternary plot — contourPlot3","text":"function contourPlot3 returns invisible list containing: mat - matrix containing response values NA's numerics. plot - generated plot.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/contourPlot3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"contourPlot3: Ternary plot — contourPlot3","text":"","code":"mdo = mixDesign(3,2, center = FALSE, axial = FALSE, randomize = FALSE,                 replicates  = c(1,1,2,3)) mdo$names(c(\"polyethylene\", \"polystyrene\", \"polypropylene\")) mdo$units(\"percent\") elongation = c(11.0, 12.4, 15.0, 14.8, 16.1, 17.7, 16.4, 16.6, 8.8, 10.0, 10.0,                9.7, 11.8, 16.8, 16.0) mdo$.response(elongation) contourPlot3(A, B, C, elongation, data = mdo, form = \"linear\") contourPlot3(A, B, C, elongation, data = mdo, form = \"quadratic\", col = 2) contourPlot3(A, B, C, elongation, data = mdo,              form = \"elongation ~ I(A^2) - B:A + I(C^2)\",              col = 3, axes = FALSE) contourPlot3(A, B, C, elongation, data = mdo,              form = \"quadratic\",              col = c(\"yellow\", \"white\", \"red\"),              axes = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":null,"dir":"Reference","previous_headings":"","what":"desOpt-class: Class `desOpt` — desOpt","title":"desOpt-class: Class `desOpt` — desOpt","text":"desOpt class represents object stores optimization results factorial design experiments. includes coded real factors, responses, desirabilities, overall desirability, design object.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"desOpt-class: Class `desOpt` — desOpt","text":"facCoded list containing coded values factors design. facReal list containing real (actual) values factors design. responses list response variables obtained design. desirabilities list desirability scores response variable. overall Numeric value representing overall desirability score. data frame containing relevant data design optimization process. fdo factorial design object used optimization process.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"desOpt-class: Class `desOpt` — desOpt","text":"desOpt$.data.frame() desOpt$print() desOpt$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"desOpt-class: Class `desOpt` — desOpt","text":"Convert object data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"desOpt-class: Class `desOpt` — desOpt","text":"","code":"desOpt$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"desOpt-class: Class `desOpt` — desOpt","text":"Print summary object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"desOpt-class: Class `desOpt` — desOpt","text":"","code":"desOpt$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"desOpt-class: Class `desOpt` — desOpt","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"desOpt-class: Class `desOpt` — desOpt","text":"","code":"desOpt$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desOpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"desOpt-class: Class `desOpt` — desOpt","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":null,"dir":"Reference","previous_headings":"","what":"desirability-class: Class `desirability` — desirability.c","title":"desirability-class: Class `desirability` — desirability.c","text":"class representing desirability metrics responses design.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"desirability-class: Class `desirability` — desirability.c","text":"response numeric vector specifying responses desirability calculated. low numeric vector representing lower bounds desirable range response. high numeric vector representing upper bounds desirable range response. target numeric vector character string indicating target values goals response. scale numeric vector specifying scaling factors used desirability calculation. importance numeric vector indicating importance response desirability calculation.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"desirability-class: Class `desirability` — desirability.c","text":"desirability.c$new() desirability.c$print() desirability.c$plot() desirability.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"desirability-class: Class `desirability` — desirability.c","text":"Initializes new desirability.c object specified parameters.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"desirability-class: Class `desirability` — desirability.c","text":"","code":"desirability.c$new(   response = NULL,   low = NULL,   high = NULL,   target = NULL,   scale = NULL,   importance = NULL )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"desirability-class: Class `desirability` — desirability.c","text":"response numeric character vector specifying responses desirability calculated. low numeric vector representing lower bounds desirable range response. high numeric vector representing upper bounds desirable range response. target numeric vector character string indicating target values goals response. scale numeric vector specifying scaling factors used desirability calculation. importance numeric vector indicating importance response desirability calculation.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"desirability-class: Class `desirability` — desirability.c","text":"Prints details desirability.c object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"desirability-class: Class `desirability` — desirability.c","text":"","code":"desirability.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"desirability-class: Class `desirability` — desirability.c","text":"Plots desirability functions based specified parameters.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"desirability-class: Class `desirability` — desirability.c","text":"","code":"desirability.c$plot(scale, main, xlab, ylab, line.width, col, numPoints = 500)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"desirability-class: Class `desirability` — desirability.c","text":"scale numeric vector specifying scaling factors used plot. main character string specifying main title plot. xlab character string specifying label x-axis. ylab character string specifying label y-axis. line.width numeric value specifying width plot lines. col vector colors plot lines. numPoints integer specifying number points plot (default 500).","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"desirability-class: Class `desirability` — desirability.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"desirability-class: Class `desirability` — desirability.c","text":"","code":"desirability.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"desirability-class: Class `desirability` — desirability.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":null,"dir":"Reference","previous_headings":"","what":"desirability: Desirability Function. — desirability","title":"desirability: Desirability Function. — desirability","text":"Creates desirability functions use optimization multiple responses.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"desirability: Desirability Function. — desirability","text":"","code":"desirability(   response,   low,   high,   target = \"max\",   scale = c(1, 1),   importance = 1 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"desirability: Desirability Function. — desirability","text":"response Name response. low Lowest acceptable value response. high Highest acceptable value response. target Desired target value response. target can `max`, `min`, specific numeric value. scale Numeric value giving scaling factors one two-sided transformations. Default c(1, 1). importance value ranging 0.1 10, used calculate weighted importance, .e., importances 1, 2, 4, D = [(d1)^1, (d2)^2, (d3)^4]^(1/7). Default `1`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"desirability: Desirability Function. — desirability","text":"function returns desirability.c object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"desirability: Desirability Function. — desirability","text":"product developed, different values responses desired, leading multiple response optimization. Minimization, maximization, well specific target value, defined using desirability functions. desirability function transforms values response [0,1], 0 stands non-acceptable value response 1 values higher/lower (depending direction optimization) values response little merit. function builds upon desirability functions specified Harrington (1965) modifications Derringer Suich (1980) Derringer (1994). Castillo, Montgomery, McCarville (1996) extended functions, extensions implemented version.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/desirability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"desirability: Desirability Function. — desirability","text":"","code":"# Example 1: Maximization of a response # Define a desirability for response y where higher values of y are better # as long as the response is smaller than high d = desirability(y, low = 6, high = 18, target = \"max\") # Show and plot the desirability function d #> Target is to maximize y  #> lower Bound:  6  #> higher Bound:  18  #> Scale factor is:  1 1  #> importance:  1  #>  plot(d)   # Example 2: Minimization of a response including a scaling factor # Define a desirability for response y where lower values of y are better # as long as the response is higher than low d = desirability(y, low = 6, high = 18, scale = c(2), target = \"min\") # Show and plot the desirability function d #> Target is to minimize y  #> lower Bound:  6  #> higher Bound:  18  #> Scale factor is:  2  #> importance:  1  #>  plot(d)   # Example 3: Specific target of a response is best including a scaling factor # Define a desirability for response y where desired value is at 8 and # values lower than 6 as well as values higher than 18 are not acceptable d = desirability(y, low = 6, high = 18, scale = c(0.5, 2), target = 12) # Show and plot the desirability function d #> Target is  12  for y  #> lower Bound:  6  #> higher Bound:  18  #> Scale factor is: low = 0.5 and high = 2  #> importance:  1  #>  plot(d)   # Example 4: y1 <- c(102, 120, 117, 198, 103, 132, 132, 139, 102, 154, 96, 163, 116, 153,         133, 133, 140, 142, 145, 142) y2 <- c(470, 410, 570, 240, 640, 270, 410, 380, 590, 260, 520, 380, 520, 290,         380, 380, 430, 430, 390, 390) d1 <- desirability(y1, 120, 170, scale = c(1, 1), target = \"max\") d3 <- desirability(y2, 400, 600, target = 500) d1 #> Target is to maximize y1  #> lower Bound:  120  #> higher Bound:  170  #> Scale factor is:  1 1  #> importance:  1  #>  plot(d1)  d3 #> Target is  500  for y2  #> lower Bound:  400  #> higher Bound:  600  #> Scale factor is: low = 1 and high = 1  #> importance:  1  #>  plot(d3)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":null,"dir":"Reference","previous_headings":"","what":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"Density function, distribution function, quantile function Gamma distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"","code":"dgamma3(x, shape, scale, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"x numeric vector quantiles. shape shape parameter, default 1. scale scale parameter, default 1. threshold threshold parameter, default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"dgamma3 gives density, pgamma3 gives distribution function, qgamma3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"Gamma distribution scale parameter alpha, shape parameter c, threshold parameter zeta density given : $$f(x) = \\frac{c}{\\alpha}\\left(\\frac{x-\\zeta}{\\alpha}\\right)^{c-1}\\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dgamma3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dgamma3: The gamma Distribution (3 Parameter) — dgamma3","text":"","code":"dgamma3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 0.01532831 temp <- pgamma3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.003659847 qgamma3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999981"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"distribution: Distribution — distribution","title":"distribution: Distribution — distribution","text":"Calculates likely parameters given distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distribution: Distribution — distribution","text":"","code":"distribution(x = NULL, distrib = \"weibull\", ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distribution: Distribution — distribution","text":"x Vector distributed values parameter determined. distrib Character string specifying distribution x. function distribution accept following character strings distribution: `normal` `chi-squared` `exponential` `logistic` `gamma` `weibull` `cauchy` `beta` `f` `t` `geometric` `poisson` `negative binomial` `log-normal` default, distribution set `weibull`. ... Additional arguments passed fitting function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distribution: Distribution — distribution","text":"distribution() returns object class DistrCollection.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"distribution: Distribution — distribution","text":"","code":"data1 <- rnorm(100, mean = 5, sd = 2) distribution(data1, distrib = \"normal\") #>  #>  #> fitted distribution is normal : #>     mean       sd  #> 4.686477 1.998741  #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":null,"dir":"Reference","previous_headings":"","what":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"Density function, distribution function, quantile function Lognormal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"","code":"dlnorm3(x, meanlog, sdlog, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"x numeric vector quantiles. meanlog, sdlog mean standard deviation distribution log scale default values 0 1 respectively. threshold threshold parameter, default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"dlnorm3 gives density, plnorm3 gives distribution function, qlnorm3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"Lognormal distribution meanlog parameter zeta, sdlog parameter sigma, threshold parameter theta density given : $$f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma(x-\\theta)}\\exp\\left(-\\frac{(\\log(x-\\theta)-\\zeta)^2}{2\\sigma^2}\\right)$$ cumulative distribution function given : $$F(x) = \\Phi\\left(\\frac{\\log(x-\\theta)-\\zeta}{\\sigma}\\right)$$ \\(\\Phi\\) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dlnorm3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dlnorm3: The Lognormal Distribution (3 Parameter) — dlnorm3","text":"","code":"dlnorm3(x = 2, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 3.191538 temp <- plnorm3(q = 2, meanlog = 0, sdlog = 1/8, threshold = 1) temp #> [1] 0.5 qlnorm3(p = temp, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 2.000004"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"doeFactor-class: Class `doeFactor` — doeFactor","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"R6 class representing factor design experiments (DOE).","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"low Numeric value specifying lower bound factor. Default `-1`. high Numeric value specifying upper bound factor. Default `1`. name Character string specifying name factor. Default empty string ``. unit Character string specifying unit measurement factor. Default empty string ``. type Character string specifying type factor. Can either `numeric` `categorical`. Default `numeric`.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"doeFactor$attributes() doeFactor$.low() doeFactor$.high() doeFactor$.type() doeFactor$.unit() doeFactor$names() doeFactor$print() doeFactor$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-attributes-","dir":"Reference","previous_headings":"","what":"Method attributes()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get attributes factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$attributes()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-low-","dir":"Reference","previous_headings":"","what":"Method .low()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get set lower bound factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$.low(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"value Numeric value set lower bound. missing, current lower bound returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-high-","dir":"Reference","previous_headings":"","what":"Method .high()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get set upper bound factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$.high(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"value Numeric value set upper bound. missing, current upper bound returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-type-","dir":"Reference","previous_headings":"","what":"Method .type()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get set type factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$.type(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"value Character string specifying type factor. Can `\"numeric\"` `\"categorical\"`. missing, current type returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-unit-","dir":"Reference","previous_headings":"","what":"Method .unit()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get set unit measurement factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$.unit(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"value Character string specifying unit measurement. missing, current unit returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Get set name factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"value Character string specifying name factor. missing, current name returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"Print characteristics factors.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"","code":"doeFactor$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/doeFactor.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"doeFactor-class: Class `doeFactor` — doeFactor","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"dotPlot: Function to create a dot plot — dotPlot","title":"dotPlot: Function to create a dot plot — dotPlot","text":"Creates dot plot. data groups, dot plot can displayed stacked separate regions.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dotPlot: Function to create a dot plot — dotPlot","text":"","code":"dotPlot(   x,   group,   xlim,   ylim,   col,   xlab,   ylab,   pch,   cex,   breaks,   stacked = TRUE,   main,   showPlot = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dotPlot: Function to create a dot plot — dotPlot","text":"x numeric vector containing values plotted. group (Optional) vector grouping values. determines grouping data points dot plot. xlim numeric vector length 2 specifying limits x-axis (lower upper limits). ylim numeric vector length 2 specifying limits y-axis (lower upper limits). col vector containing numeric values strings specifying colors different groups dot plot. xlab title x-axis. ylab title y-axis. pch vector integers specifying symbols single character used plotting points different groups dot plot. cex amount points symbols magnified relative default. breaks numeric vector specifying breakpoints binning values x. stacked logical value indicating whether groups plotted stacked dot plot (default TRUE). main title plot. showPlot logical value indicating whether display plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dotPlot: Function to create a dot plot — dotPlot","text":"list cointaining: invisible matrix containing NAs numeric values representing values bin. number bins given number columns matrix. graphic.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dotPlot: Function to create a dot plot — dotPlot","text":"Values x assigned bins defined breaks. binning performed using hist.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dotPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dotPlot: Function to create a dot plot — dotPlot","text":"","code":"# Create some data and grouping set.seed(1) x <- rnorm(28) g <- rep(1:2, 14)  # Dot plot with groups and no stacking dotPlot(x, group = g, stacked = FALSE, pch = c(19, 20), main = \"Non stacked dot plot\") #> Warning: calling par(new=TRUE) with no plot   # Dot plot with groups and stacking dotPlot(x, group = g, stacked = TRUE, pch = c(19, 20), main = \"Stacked dot plot\")  #> Warning: calling par(new=TRUE) with no plot"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":null,"dir":"Reference","previous_headings":"","what":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"Density function, distribution function, quantile function Weibull distribution threshold parameter.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"","code":"dweibull3(x, shape, scale, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"x numeric vector quantiles. shape shape parameter Weibull distribution. Default 1. scale scale parameter Weibull distribution. Default 1. threshold threshold (location) parameter Weibull distribution. Default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"dweibull3 returns density, pweibull3 returns distribution function, qweibull3 returns quantile function Weibull distribution threshold.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"Weibull distribution scale parameter alpha, shape parameter c, threshold parameter zeta density function given : $$f(x) = \\frac{c}{\\alpha} \\left(\\frac{x - \\zeta}{\\alpha}\\right)^{c-1} \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/dweibull3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dweibull3: The Weibull Distribution (3 Parameter) — dweibull3","text":"","code":"dweibull3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 1.839397 temp <- pweibull3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.6321206 qweibull3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999999"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":null,"dir":"Reference","previous_headings":"","what":"facDesign-class: Class `facDesign` — facDesign.c","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"facDesign.c class used represent factorial designs, including factors, responses, blocks, design matrices. class supports various experimental designs allows storage manipulation data related design analysis factorial experiments.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"name Character string representing name factorial design. factors List factors involved factorial design, including levels settings. cube Data frame containing design matrix cube portion factorial design. star Data frame containing design matrix star portion factorial design. centerCube Data frame containing center points within cube portion factorial design. centerStar Data frame containing center points within star portion factorial design. generator List generators used create fractional factorial design. response Data frame containing responses outcomes measured design. block Data frame specifying block structures design blocked. blockGen Data frame specifying block generators design. runOrder Data frame specifying order runs performed. standardOrder Data frame specifying standard order runs. desireVal List desired values targets response variables. desirability List desirability scores metrics based desired values. fits Data frame containing fitted model parameters diagnostics responses design.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"facDesign.c$nrow() facDesign.c$ncol() facDesign.c$print() facDesign.c$.clear() facDesign.c$names() facDesign.c$.data.frame() facDesign.c$get() facDesign.c$lows() facDesign.c$highs() facDesign.c$.nfp() facDesign.c$identity() facDesign.c$summary() facDesign.c$.response() facDesign.c$effectPlot() facDesign.c$lm() facDesign.c$desires() facDesign.c$set.fits() facDesign.c$types() facDesign.c$unit() facDesign.c$.star() facDesign.c$.blockGen() facDesign.c$.block() facDesign.c$.centerCube() facDesign.c$.centerStar() facDesign.c$.generators() facDesign.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-nrow-","dir":"Reference","previous_headings":"","what":"Method nrow()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get number rows Design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$nrow()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-ncol-","dir":"Reference","previous_headings":"","what":"Method ncol()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get number columns Design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$ncol()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Prints formatted representation factorial design object, including design matrices responses.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-clear-","dir":"Reference","previous_headings":"","what":"Method .clear()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Clears factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.clear()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set names factors factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value Character vector new names factors. missing, retrieves current names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Converts factorial design object data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Retrieves elements factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$get(i, j)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Row index. j Column index.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-lows-","dir":"Reference","previous_headings":"","what":"Method lows()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set lower bounds factors factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$lows(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value Numeric vector new lower bounds. missing, retrieves current lower bounds.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-highs-","dir":"Reference","previous_headings":"","what":"Method highs()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set upper bounds factors factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$highs(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value Numeric vector new upper bounds. missing, retrieves current upper bounds.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-nfp-","dir":"Reference","previous_headings":"","what":"Method .nfp()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Prints summary factors attributes including low, high, name, unit, type.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.nfp()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-identity-","dir":"Reference","previous_headings":"","what":"Method identity()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Returns factorial design object , used verify return object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$identity()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Summarizes factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method .response()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set response data factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value Data frame numeric vector new responses. missing, retrieves current responses.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-effectplot-","dir":"Reference","previous_headings":"","what":"Method effectPlot()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Plots effects factors response variables.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$effectPlot(   factors,   fun = mean,   response = NULL,   lty,   xlab,   ylab,   main,   ylim )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"factors Factors plotted. fun Function applied response variables (e.g., mean). response Optional; specifies response variables plot. lty Line type plotting. xlab Label x-axis. ylab Label y-axis. main Main title plot. ylim Limits y-axis.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-lm-","dir":"Reference","previous_headings":"","what":"Method lm()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Fits linear model response data factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$lm(formula)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"formula Formula specifying model fitted.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-desires-","dir":"Reference","previous_headings":"","what":"Method desires()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set desirability values response variables.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$desires(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value List new desirability values. missing, retrieves current desirability values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-set-fits-","dir":"Reference","previous_headings":"","what":"Method set.fits()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Set fits response variables factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$set.fits(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New fits.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-types-","dir":"Reference","previous_headings":"","what":"Method types()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set types designs used factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$types(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New design types. missing, retrieves current types.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-unit-","dir":"Reference","previous_headings":"","what":"Method unit()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set units factors factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$unit(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New units. missing, retrieves current units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-star-","dir":"Reference","previous_headings":"","what":"Method .star()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set star points factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.star(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New star points. missing, retrieves current star points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-blockgen-","dir":"Reference","previous_headings":"","what":"Method .blockGen()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set block generators factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.blockGen(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New block generators. missing, retrieves current block generators.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-block-","dir":"Reference","previous_headings":"","what":"Method .block()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set blocks factorial design object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.block(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New blocks. missing, retrieves current blocks.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-centercube-","dir":"Reference","previous_headings":"","what":"Method .centerCube()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set center points cube portion factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.centerCube(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New center points cube. missing, retrieves current center points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-centerstar-","dir":"Reference","previous_headings":"","what":"Method .centerStar()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set center points star portion factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.centerStar(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New center points star. missing, retrieves current center points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-generators-","dir":"Reference","previous_headings":"","what":"Method .generators()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"Get set generators factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$.generators(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"value New generators. missing, retrieves current generators.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"","code":"facDesign.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.c.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign-class: Class `facDesign` — facDesign.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"facDesign — facDesign","title":"facDesign — facDesign","text":"Generates 2^k full factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"facDesign — facDesign","text":"","code":"facDesign(   k = 3,   p = 0,   replicates = 1,   blocks = 1,   centerCube = 0,   random.seed = 1234 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"facDesign — facDesign","text":"k Numeric value giving number factors. default k set `3`. p Numeric integer `0` `7`. p giving number additional factors response surface design aliasing effects. information see fracDesign fracChoose. default p set `0`. replicates Numeric value giving number replicates per factor combination. default replicates set `1`. blocks Numeric value giving number blocks. default blocks set `1`. Blocking performed k greater 2. centerCube Numeric value giving number centerpoints within 2^k design. default centerCube set `0`. random.seed Numeric value setting random seed reproducibility.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"facDesign — facDesign","text":"function facDesign returns object class facDesign.c.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/facDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"facDesign — facDesign","text":"","code":"# Example 1 vp.full <- facDesign(k = 3) vp.full$.response(rnorm(2^3)) vp.full$summary() #> Information about the factors: #>  #>            A       B       C #> low       -1      -1      -1 #> high       1       1       1 #> name       A       B       C #> unit                         #> type numeric numeric numeric #> ----------- #>   StandOrder RunOrder Block  A  B  C  rnorm.2.3. #> 7          7        1     1 -1  1  1  0.03572991 #> 2          2        2     1  1 -1 -1  0.11297506 #> 6          6        3     1  1 -1  1  1.42855203 #> 1          1        4     1 -1 -1 -1  0.98340378 #> 4          4        5     1  1  1 -1 -0.62245679 #> 3          3        6     1 -1  1 -1 -0.73153600 #> 8          8        7     1  1  1  1 -0.51666972 #> 5          5        8     1 -1 -1  1 -1.75073344  # Example 2 vp.rep <- facDesign(k = 2, replicates = 3, centerCube = 4) vp.rep$names(c(\"Name 1\", \"Name 2\")) vp.rep$unit(c(\"min\", \"F\")) vp.rep$lows(c(20, 40, 60)) vp.rep$highs(c(40, 60, 80)) vp.rep$summary() #> Information about the factors: #>  #>       Name 1  Name 2 #> low       20      40 #> high      40      60 #> name  Name 1  Name 2 #> unit     min       F #> type numeric numeric #> ----------- #>    StandOrder RunOrder Block  A  B  y #> 16         16        1     1  0  0 NA #> 11         11        2     1 -1  1 NA #> 14         14        3     1  0  0 NA #> 10         10        4     1  1 -1 NA #> 4           4        5     1  1  1 NA #> 3           3        6     1 -1  1 NA #> 15         15        7     1  0  0 NA #> 9           9        8     1 -1 -1 NA #> 6           6        9     1  1 -1 NA #> 2           2       10     1  1 -1 NA #> 12         12       11     1  1  1 NA #> 1           1       12     1 -1 -1 NA #> 7           7       13     1 -1  1 NA #> 8           8       14     1  1  1 NA #> 13         13       15     1  0  0 NA #> 5           5       16     1 -1 -1 NA  # Example 3 dfac <- facDesign(k = 3, centerCube = 4) dfac$names(c('Factor 1', 'Factor 2', 'Factor 3')) dfac$names() #> [1] \"Factor 1\" \"Factor 2\" \"Factor 3\" dfac$lows(c(80, 120, 1)) dfac$lows() #> $`Factor 1` #> [1] 80 #>  #> $`Factor 2` #> [1] 120 #>  #> $`Factor 3` #> [1] 1 #>  dfac$highs(c(120, 140, 2)) dfac$highs() #> $`Factor 1` #> [1] 120 #>  #> $`Factor 2` #> [1] 140 #>  #> $`Factor 3` #> [1] 2 #>  dfac$summary() #> Information about the factors: #>  #>      Factor 1 Factor 2 Factor 3 #> low        80      120        1 #> high      120      140        2 #> name Factor 1 Factor 2 Factor 3 #> unit                            #> type  numeric  numeric  numeric #> ----------- #>    StandOrder RunOrder Block  A  B  C  y #> 7           7        1     1 -1  1  1 NA #> 9           9        2     1  0  0  0 NA #> 12         12        3     1  0  0  0 NA #> 5           5        4     1 -1 -1  1 NA #> 4           4        5     1  1  1 -1 NA #> 3           3        6     1 -1  1 -1 NA #> 6           6        7     1  1 -1  1 NA #> 10         10        8     1  0  0  0 NA #> 8           8        9     1  1  1  1 NA #> 2           2       10     1  1 -1 -1 NA #> 11         11       11     1  0  0  0 NA #> 1           1       12     1 -1 -1 -1 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracChoose.html","id":null,"dir":"Reference","previous_headings":"","what":"fracChoose: Choosing a fractional or full factorial design from a table. — fracChoose","title":"fracChoose: Choosing a fractional or full factorial design from a table. — fracChoose","text":"Designs displayed classic minimum abberation designs. Choosing design done clicking mouse appropriate field.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracChoose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fracChoose: Choosing a fractional or full factorial design from a table. — fracChoose","text":"","code":"fracChoose()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracChoose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fracChoose: Choosing a fractional or full factorial design from a table. — fracChoose","text":"fracChoose returns object class facDesign.c.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracChoose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fracChoose: Choosing a fractional or full factorial design from a table. — fracChoose","text":"","code":"fracChoose()  #>  #> Choose a fractional factorial design by clicking into the appropriate field #> Waiting for your selection: #>  #>   StandOrder RunOrder Block  A  B  C  y #> 4          4        1     1  1  1  1 NA #> 2          2        2     1  1 -1 -1 NA #> 3          3        3     1 -1  1 -1 NA #> 1          1        4     1 -1 -1  1 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"fracDesign — fracDesign","title":"fracDesign — fracDesign","text":"Generates 2^k-p fractional factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fracDesign — fracDesign","text":"","code":"fracDesign(   k = 3,   p = 0,   gen = NULL,   replicates = 1,   blocks = 1,   centerCube = 0,   random.seed = 1234 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fracDesign — fracDesign","text":"k Numeric value giving number factors. default k set `3`. p Numeric integer `0` `7`. p giving number additional factors response surface design aliasing effects. 2^k-p factorial design generated generators standard designs available fracChoose() used. default p set `0`. value cause function omit argument gen given user replace one table standard designs (see: fracChoose). Replicates blocks can set anyway! gen One defining relations fractional factorial design, example:  `C=AB`. default gen set NULL. replicates Numeric value giving number replicates per factor combination. default replicates set `1`. blocks Numeric value giving number blocks. default blocks set `1`. centerCube Numeric value giving number center points within 2^k design. default centerCube set `0`. random.seed Seed randomization design","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fracDesign — fracDesign","text":"function fracDesign returns object class facDesign.c.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/fracDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fracDesign — fracDesign","text":"","code":"#Example 1 #Returns a 2^4-1 fractional factorial design. Factor D will be aliased with vp.frac = fracDesign(k = 4, gen = \"D=ABC\") #the three-way-interaction ABC (i.e. I = ABCD) vp.frac$.response(rnorm(2^(4-1))) # summary of the fractional factorial design vp.frac$summary() #> Information about the factors: #>  #>            A       B       C       D #> low       -1      -1      -1      -1 #> high       1       1       1       1 #> name       A       B       C       D #> unit                                 #> type numeric numeric numeric numeric #> ----------- #>   StandOrder RunOrder Block  A  B  C  D rnorm.2..4...1.. #> 7          7        1     1 -1  1  1 -1       0.03572991 #> 2          2        2     1  1 -1 -1  1       0.11297506 #> 6          6        3     1  1 -1  1 -1       1.42855203 #> 1          1        4     1 -1 -1 -1 -1       0.98340378 #> 4          4        5     1  1  1 -1 -1      -0.62245679 #> 3          3        6     1 -1  1 -1  1      -0.73153600 #> 8          8        7     1  1  1  1  1      -0.51666972 #> 5          5        8     1 -1 -1  1  1      -1.75073344 #>  #> --------- #>  #> Defining relations: #> I =  ABCD \t\tColumns: 1 2 3 4  #>  #> Resolution:  IV  #>   #Example 2 #Returns a full factorial design with 3 replications per factor combination and 4 center points vp.rep = fracDesign(k = 3, replicates = 3, centerCube = 4) #Summary of the replicated fractional factorial design vp.rep$summary() #> Information about the factors: #>  #>            A       B       C #> low       -1      -1      -1 #> high       1       1       1 #> name       A       B       C #> unit                         #> type numeric numeric numeric #> ----------- #>    StandOrder RunOrder Block  A  B  C  y #> 27         27        1     1  0  0  0 NA #> 13         13        2     1 -1 -1  1 NA #> 24         24        3     1  1  1  1 NA #> 12         12        4     1  1  1 -1 NA #> 5           5        5     1 -1 -1  1 NA #> 10         10        6     1  1 -1 -1 NA #> 14         14        7     1  1 -1  1 NA #> 19         19        8     1 -1  1 -1 NA #> 8           8        9     1  1  1  1 NA #> 16         16       10     1  1  1  1 NA #> 20         20       11     1  1  1 -1 NA #> 6           6       12     1  1 -1  1 NA #> 23         23       13     1 -1  1  1 NA #> 17         17       14     1 -1 -1 -1 NA #> 7           7       15     1 -1  1  1 NA #> 2           2       16     1  1 -1 -1 NA #> 18         18       17     1  1 -1 -1 NA #> 28         28       18     1  0  0  0 NA #> 15         15       19     1 -1  1  1 NA #> 22         22       20     1  1 -1  1 NA #> 21         21       21     1 -1 -1  1 NA #> 4           4       22     1  1  1 -1 NA #> 25         25       23     1  0  0  0 NA #> 9           9       24     1 -1 -1 -1 NA #> 26         26       25     1  0  0  0 NA #> 3           3       26     1 -1  1 -1 NA #> 11         11       27     1 -1  1 -1 NA #> 1           1       28     1 -1 -1 -1 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLin.html","id":null,"dir":"Reference","previous_headings":"","what":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","title":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","text":"Function visualize linearity gage plotting single mean bias one plot intercalate straight line. Furthermore function deliver characteristic values linearity studies according MSA (Measurement System Analysis).","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","text":"","code":"gageLin(   object,   conf.level = 0.95,   ylim,   col,   pch,   lty = c(1, 2),   stats = TRUE,   plot = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","text":"object object class MSALinearity containing data model linearity analysis. create object see gageLinDesign. conf.level numeric value `0` `1`, giving confidence intervall analysis. Default value: `0.95`. ylim numeric vector length 2 specifying y-axis limits plot. specified, limits set automatically based data. col vector four numeric entries. first gives color single points, second gives color points mean bias, third gives color fo straight interpolation line fourth gives color lines representing confidence interval. one values missing negative points lines plotted. col default `c(1,2,1,4)`. pch vector two numeric single character entries giving symbols single points (1st entry) mean bias (2nd entry). default vector `c(20,18)` lty vector two entries giving line-style interpolating line confidence interval lines. detailed information entries please see par. default value lty `c(1,2)`. stats Logical value. `TRUE` (default) function returns calculated information. plot Logical value indicating whether generate plot linearity analysis. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","text":"function returns object class MSALinearity can used e.g. plot summary.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageLin: Function to visualize and calucalte the linearity of a gage. — gageLin","text":"","code":"# Results of single runs A=c(2.7,2.5,2.4,2.5,2.7,2.3,2.5,2.5,2.4,2.4,2.6,2.4) B=c(5.1,3.9,4.2,5,3.8,3.9,3.9,3.9,3.9,4,4.1,3.8) C=c(5.8,5.7,5.9,5.9,6,6.1,6,6.1,6.4,6.3,6,6.1) D=c(7.6,7.7,7.8,7.7,7.8,7.8,7.8,7.7,7.8,7.5,7.6,7.7) E=c(9.1,9.3,9.5,9.3,9.4,9.5,9.5,9.5,9.6,9.2,9.3,9.4)  # create Design test=gageLinDesign(ref=c(2,4,6,8,10),n=12) # create data.frame for results results=data.frame(rbind(A,B,C,D,E)) # enter results in Design test$response(results) test$summary() #> ---------------------- #>   Part Ref  X1  X2  X3  X4  X5  X6  X7  X8  X9 X10 X11 X12 #> A    1   2 2.7 2.5 2.4 2.5 2.7 2.3 2.5 2.5 2.4 2.4 2.6 2.4 #> B    2   4 5.1 3.9 4.2 5.0 3.8 3.9 3.9 3.9 3.9 4.0 4.1 3.8 #> C    3   6 5.8 5.7 5.9 5.9 6.0 6.1 6.0 6.1 6.4 6.3 6.0 6.1 #> D    4   8 7.6 7.7 7.8 7.7 7.8 7.8 7.8 7.7 7.8 7.5 7.6 7.7 #> E    5  10 9.1 9.3 9.5 9.3 9.4 9.5 9.5 9.5 9.6 9.2 9.3 9.4 #> ----------------------  # no plot and no return MSALin=gageLin(test,stats=FALSE,plot=FALSE)  # plot only plot(MSALin)  MSALin$plot()   # summary MSALin$summary() #> ---------------------- #>   Part Ref  X1  X2  X3  X4  X5  X6  X7  X8  X9 X10 X11 X12 #> A    1   2 2.7 2.5 2.4 2.5 2.7 2.3 2.5 2.5 2.4 2.4 2.6 2.4 #> B    2   4 5.1 3.9 4.2 5.0 3.8 3.9 3.9 3.9 3.9 4.0 4.1 3.8 #> C    3   6 5.8 5.7 5.9 5.9 6.0 6.1 6.0 6.1 6.4 6.3 6.0 6.1 #> D    4   8 7.6 7.7 7.8 7.7 7.8 7.8 7.8 7.7 7.8 7.5 7.6 7.7 #> E    5  10 9.1 9.3 9.5 9.3 9.4 9.5 9.5 9.5 9.6 9.2 9.3 9.4 #> ---------------------- #>  #> Call: #> lm(formula = BIAS ~ ref) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -0.41000 -0.12000  0.01667  0.11667  0.89000  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  0.73667    0.07252   10.16 1.73e-14 *** #> ref         -0.13167    0.01093  -12.04  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.2395 on 58 degrees of freedom #> Multiple R-squared:  0.7143,\tAdjusted R-squared:  0.7094  #> F-statistic:   145 on 1 and 58 DF,  p-value: < 2.2e-16 #>  #> ---------------------- #> Linearity:  #>   13.16667"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLinDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","title":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","text":"Function generates object can used function gageLin.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLinDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","text":"","code":"gageLinDesign(ref, n = 5)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLinDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","text":"ref vector contains reference values group. n single value gives amount runs.Default value: `5`..","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLinDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","text":"function returns object class MSALinearity.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageLinDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageLinDesign: Function to create a object of class MSALinearity. — gageLinDesign","text":"","code":"# results of run A-E A=c(2.7,2.5,2.4,2.5,2.7,2.3,2.5,2.5,2.4,2.4,2.6,2.4) B=c(5.1,3.9,4.2,5,3.8,3.9,3.9,3.9,3.9,4,4.1,3.8) C=c(5.8,5.7,5.9,5.9,6,6.1,6,6.1,6.4,6.3,6,6.1) D=c(7.6,7.7,7.8,7.7,7.8,7.8,7.8,7.7,7.8,7.5,7.6,7.7) E=c(9.1,9.3,9.5,9.3,9.4,9.5,9.5,9.5,9.6,9.2,9.3,9.4)  # create Design test=gageLinDesign(ref=c(2,4,6,8,10),n=12) # create data.frame for results results=data.frame(rbind(A,B,C,D,E)) # enter results in Design test$response(results)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":null,"dir":"Reference","previous_headings":"","what":"gageRR-class: Class `gageRR` — gageRR.c","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"R6 Class Gage R&R (Repeatability Reproducibility) Analysis","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"X Data frame containing measurement data. ANOVA List containing results Analysis Variance (ANOVA) gage study. RedANOVA List containing results reduced ANOVA. method Character string specifying method used analysis (e.g., `crossed`, `nested`). Estimates List estimates including variance components, repeatability, reproducibility. Varcomp List variance components. Sigma Numeric value representing standard deviation measurement system. GageName Character string representing name gage. GageTolerance Numeric value indicating tolerance gage. DateOfStudy Character string representing date gage R&R study. PersonResponsible Character string indicating person responsible study. Comments Character string additional comments notes study. b Factor levels operator. Factor levels part. y Numeric vector matrix containing measurement responses. facNames Character vector specifying names factors (e.g., `Operator`, `Part`). numO Integer representing number operators. numP Integer representing number parts. numM Integer representing number measurements per part-operator combination.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"gageRR.c$new() gageRR.c$print() gageRR.c$subset() gageRR.c$summary() gageRR.c$get.response() gageRR.c$response() gageRR.c$names() gageRR.c$.data.frame() gageRR.c$get.tolerance() gageRR.c$set.tolerance() gageRR.c$get.sigma() gageRR.c$set.sigma() gageRR.c$plot() gageRR.c$errorPlot() gageRR.c$whiskersPlot() gageRR.c$averagePlot() gageRR.c$compPlot() gageRR.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Initialize fiels gageRR object","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$new(   X,   ANOVA = NULL,   RedANOVA = NULL,   method = NULL,   Estimates = NULL,   Varcomp = NULL,   Sigma = NULL,   GageName = NULL,   GageTolerance = NULL,   DateOfStudy = NULL,   PersonResponsible = NULL,   Comments = NULL,   b = NULL,   a = NULL,   y = NULL,   facNames = NULL,   numO = NULL,   numP = NULL,   numM = NULL )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"X Data frame containing measurement data. ANOVA List containing results Analysis Variance (ANOVA) gage study. RedANOVA List containing results reduced ANOVA. method Character string specifying method used analysis (e.g., \"crossed\", \"nested\"). Estimates List estimates including variance components, repeatability, reproducibility. Varcomp List variance components. Sigma Numeric value representing standard deviation measurement system. GageName Character string representing name gage. GageTolerance Numeric value indicating tolerance gage. DateOfStudy Character string representing date gage R&R study. PersonResponsible Character string indicating person responsible study. Comments Character string additional comments notes study. b Factor levels operator. Factor levels part. y Numeric vector matrix containing measurement responses. facNames Character vector specifying names factors (e.g., \"Operator\", \"Part\"). numO Integer representing number operators. numP Integer representing number parts. numM Integer representing number measurements per part-operator combination.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Return data frame containing measurement data (X)","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-subset-","dir":"Reference","previous_headings":"","what":"Method subset()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Return subset data frame containing measurement data (X)","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$subset(i, j)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"-position row X. j j-position column X.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Summarize information fields gageRR object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-get-response-","dir":"Reference","previous_headings":"","what":"Method get.response()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Get get response gageRRDesign object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$get.response()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method response()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Set response gageRRDesign object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"value New response vector.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Methods function names Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$names()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Methods function .data.frame Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-get-tolerance-","dir":"Reference","previous_headings":"","what":"Method get.tolerance()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Get tolerance object class gageRR.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$get.tolerance()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-set-tolerance-","dir":"Reference","previous_headings":"","what":"Method set.tolerance()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Set tolerance object class gageRR.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$set.tolerance(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"value data.frame vector new value tolerance.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-get-sigma-","dir":"Reference","previous_headings":"","what":"Method get.sigma()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Get sigma object class gageRR.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$get.sigma()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-set-sigma-","dir":"Reference","previous_headings":"","what":"Method set.sigma()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Set sigma object class gageRR.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$set.sigma(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"value Valor sigma","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"function creates customized plot using data gageRR.c object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$plot(main = NULL, xlab = NULL, ylab = NULL, col, lwd, fun = mean)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"main Character string specifying title plot. xlab character string x-axis label. ylab character string y-axis label. col character string vector specifying color(s) used plot elements. lwd numeric value specifying line width plot elements fun Function use calculation interactions (e.g., mean, median). Default mean.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"# Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo)  gdo$plot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-errorplot-","dir":"Reference","previous_headings":"","what":"Method errorPlot()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"data object class gageRR can analyzed running `Error Charts` individual deviations accepted rference values. `Error Charts` provided function errorPlot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$errorPlot(main, xlab, ylab, col, pch, ylim, legend = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"main main title plot. xlab character string x-axis label. ylab character string y-axis label. col Plotting color. pch integer specifying symbol single character used default plotting points. ylim y limits plot. legend logical value specifying whether legend plotted automatically. default legend set `TRUE`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"# Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo)  gdo$errorPlot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-whiskersplot-","dir":"Reference","previous_headings":"","what":"Method whiskersPlot()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"Whiskers Chart, high low data values average (median) part--operator plotted provide insight consistency operators, indicate outliers discover part-operator interactions. Whiskers Chart reminds boxplots every part every operator.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$whiskersPlot(main, xlab, ylab, col, ylim, legend = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"main main title plot. xlab character string x-axis label. ylab character string y-axis label. col Plotting color. ylim y limits plot. legend logical value specifying whether legend plotted automatically. default legend set `TRUE`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"# Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo)  gdo$whiskersPlot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-averageplot-","dir":"Reference","previous_headings":"","what":"Method averagePlot()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"averagePlot creates x-y plots averages size object class gageRR. Therfore averages multiple readings operator part plotted reference value overall part averages index.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$averagePlot(main, xlab, ylab, col, single = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"main main title plot. xlab character string x-axis label. ylab character string y-axis label. col Plotting color. single logical value.`TRUE` new graphic device opened plot. default single set `FALSE`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"# Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo)  gdo$averagePlot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-compplot-","dir":"Reference","previous_headings":"","what":"Method compPlot()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"compPlot creates comparison x-y plots object class gageRR. averages multiple readings operator part plotted operators indices. plot compares values obtained one operator another.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$compPlot(main, xlab, ylab, col, cex.lab, fun = NULL)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"main main title plot. xlab character string x-axis label. ylab character string y-axis label. col Plotting color. cex.lab magnification used x y labels relative current setting cex. fun Optional function applied multiple readings part. fun object class function like mean,median, sum, etc. default, fun set `NULL` readings plotted.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"# Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo)  gdo$compPlot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"gageRR.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR-class: Class `gageRR` — gageRR.c","text":"","code":"#create gageRR-object gdo <- gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) #vector of responses y <- c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  #appropriate responses gdo$response(y) # perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   # Using the plots gdo$plot()   ## ------------------------------------------------ ## Method `gageRR.c$plot` ## ------------------------------------------------  # Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   gdo$plot()   ## ------------------------------------------------ ## Method `gageRR.c$errorPlot` ## ------------------------------------------------  # Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   gdo$errorPlot()   ## ------------------------------------------------ ## Method `gageRR.c$whiskersPlot` ## ------------------------------------------------  # Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   gdo$whiskersPlot()   ## ------------------------------------------------ ## Method `gageRR.c$averagePlot` ## ------------------------------------------------  # Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   gdo$averagePlot()   ## ------------------------------------------------ ## Method `gageRR.c$compPlot` ## ------------------------------------------------  # Create gageRR-object gdo = gageRRDesign(Operators = 3, Parts = 10, Measurements = 3, randomize = FALSE) # Vector of responses y = c(0.29,0.08, 0.04,-0.56,-0.47,-1.38,1.34,1.19,0.88,0.47,0.01,0.14,-0.80,       -0.56,-1.46, 0.02,-0.20,-0.29,0.59,0.47,0.02,-0.31,-0.63,-0.46,2.26,       1.80,1.77,-1.36,-1.68,-1.49,0.41,0.25,-0.11,-0.68,-1.22,-1.13,1.17,0.94,       1.09,0.50,1.03,0.20,-0.92,-1.20,-1.07,-0.11, 0.22,-0.67,0.75,0.55,0.01,       -0.20, 0.08,-0.56,1.99,2.12,1.45,-1.25,-1.62,-1.77,0.64,0.07,-0.15,-0.58,       -0.68,-0.96,1.27,1.34,0.67,0.64,0.20,0.11,-0.84,-1.28,-1.45,-0.21,0.06,       -0.49,0.66,0.83,0.21,-0.17,-0.34,-0.49,2.01,2.19,1.87,-1.31,-1.50,-2.16)  # Appropriate responses gdo$response(y) # Perform and gageRR gdo <- gageRR(gdo) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator       2   3.17   1.584  34.440 1.09e-10 *** #> Part           9  88.36   9.818 213.517  < 2e-16 *** #> Operator:Part 18   0.36   0.020   0.434    0.974     #> Residuals     60   2.76   0.046                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value   Pr(>F)     #> Operator     2   3.17   1.584   39.62 1.34e-12 *** #> Part         9  88.36   9.818  245.61  < 2e-16 *** #> Residuals   78   3.12   0.040                      #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           0.0914         0.0776 0.302     1.81           0.279 #>  repeatability    0.0400         0.0339 0.200     1.20           0.184 #>  reproducibility  0.0515         0.0437 0.227     1.36           0.209 #>    Operator       0.0515         0.0437 0.227     1.36           0.209 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      1.0864         0.9224 1.042     6.25           0.960 #> totalVar          1.1779         1.0000 1.085     6.51           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 4  #>   gdo$compPlot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.html","id":null,"dir":"Reference","previous_headings":"","what":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","title":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","text":"Performs Gage R&R analysis object class gageRR.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","text":"","code":"gageRR(   gdo,   method = \"crossed\",   sigma = 6,   alpha = 0.25,   tolerance = NULL,   dig = 3,   print = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","text":"gdo Needs object class gageRR.c. method Character string specifying Gage R&R method. `crossed` typical design performing Measurement Systems Analysis using Gage Repeatability Reproducibility `nested` used destructive testing (.e. part measured twice). Operators measure different sample parts premise parts batch alike. default method set `crossed`. sigma Numeric value giving number sigmas. sigma=6 relates 99.73 percent representing full spread normal distribution function (.e. pnorm(3) - pnorm(-3)). Another popular setting sigma=5.15 relates 99 percent (.e. pnorm(2.575) - pnorm(-2.575)). default sigma set `6`. alpha Alpha value discarding interaction Operator:Part fitting non-interaction model. default alpha set `0.25`. tolerance Mumeric value giving tolerance measured parts. required calculate Process Tolerance Ratio. default tolerance set NULL. dig numeric value giving number significant digits format. default dig set `3`. print Print summary perform Gage.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","text":"function gageRR returns object class gageRR.c shows typical Gage Repeatability Reproducibility Output including Process Tolerance Ratios number distinctive categories (.e. ndc) measurement system able discriminate tested setting.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRR: Gage R&R - Gage Repeatability and Reproducibility — gageRR","text":"","code":"# Create de gageRR Design design <- gageRRDesign(Operators = 3, Parts = 10, Measurements = 3,                        method = \"crossed\", sigma = 6, randomize = TRUE) design$response(rnorm(nrow(design$X), mean = 10, sd = 2))  # Results of de Design result <- gageRR(gdo = design, method = \"crossed\", sigma = 6, alpha = 0.25) #>  #> AnOVa Table -  crossed Design #>               Df Sum Sq Mean Sq F value Pr(>F) #> Operator       2  12.01   6.007   1.360  0.264 #> Part           9  32.73   3.637   0.824  0.597 #> Operator:Part 18  50.75   2.819   0.638  0.854 #> Residuals     60 264.96   4.416                #>  #> ---------- #> AnOVa Table Without Interaction -  crossed Design #>             Df Sum Sq Mean Sq F value Pr(>F) #> Operator     2  12.01   6.007   1.484  0.233 #> Part         9  32.73   3.637   0.899  0.531 #> Residuals   78 315.71   4.048                #>  #> ---------- #>  #> Gage R&R #>                  VarComp VarCompContrib Stdev StudyVar StudyVarContrib #> totalRR           4.1128         1.0000 2.028    12.17           1.000 #>  repeatability    4.0475         0.9841 2.012    12.07           0.992 #>  reproducibility  0.0653         0.0159 0.256     1.53           0.126 #>    Operator       0.0653         0.0159 0.256     1.53           0.126 #>    Operator:Part  0.0000         0.0000 0.000     0.00           0.000 #> Part to Part      0.0000         0.0000 0.000     0.00           0.000 #> totalVar          4.1128         1.0000 2.028    12.17           1.000 #>  #> --- #>  * Contrib equals Contribution in % #>  **Number of Distinct Categories (truncated signal-to-noise-ratio) = 1  #>  class(result) #> [1] \"gageRR.c\" \"R6\"       result$plot()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRRDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","title":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","text":"Function Creates Gage R&R design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRRDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","text":"","code":"gageRRDesign(   Operators = 3,   Parts = 10,   Measurements = 3,   method = \"crossed\",   sigma = 6,   randomize = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRRDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","text":"Operators Numeric value giving number character vector defining Operators. default Operators set `3`. Parts number character vector defining Parts. default parts set `10`. Measurements number defining measurements per part. default Measurements set `3`. method Character string specifying Gage R&R method. `crossed` typical design performing Measurement Systems Analysis using Gage Repeatability Reproducibility `nested` used destructive testing (.e. part measured twice). Operators measure different sample parts premise parts batch alike. default method set `crossed`. sigma sigma=6 relates 99.73 percent representing full spread normal distribution function (.e. pnorm(3) - pnorm(-3)). Another popular setting sigma=5.15 relates 99 percent (.e. pnorm(2.575) - pnorm(-2.575)). default sigma set `6`. randomize Logical value. TRUE (default) randomizes gageRR design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRRDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","text":"function gageRRDesign returns object class gageRR.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/gageRRDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gageRRDesign: Gage R&R - Gage Repeatability and Reproducibility — gageRRDesign","text":"","code":"design <- gageRRDesign(Operators = 3, Parts = 10, Measurements = 3,                        method = \"crossed\", sigma = 6, randomize = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"interactionPlot — interactionPlot","title":"interactionPlot — interactionPlot","text":"Creates interaction plot factors factorial design visualize interaction effects .","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interactionPlot — interactionPlot","text":"","code":"interactionPlot(dfac, response = NULL, fun = mean, main, col = 1:2)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interactionPlot — interactionPlot","text":"dfac object class facDesign.c, representing factorial design. response Response variable. response data frame fdo consists one responses, variable can used choose just one column response data frame. response Needs object class character length `1`. needs character name response response data frame plotted. fun Function use calculation interactions (e.g., mean, median). Default mean. main Character string: title plot. col Vector colors plot. Single colors can given character strings numeric values. Default 1:2.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interactionPlot — interactionPlot","text":"Return interaction plot factors factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"interactionPlot — interactionPlot","text":"interactionPlot() displays interactions object class facDesign (.e. 2^k full 2^k-p fractional factorial design). Parts original interactionPlot integrated.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/interactionPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"interactionPlot — interactionPlot","text":"","code":"# Example 1 # Create the facDesign object dfac <- facDesign(k = 3, centerCube = 4) dfac$names(c('Factor 1', 'Factor 2', 'Factor 3'))  # Assign performance to the factorial design rend <- c(simProc(120,140,1), simProc(80,140,1), simProc(120,140,2),           simProc(120,120,1), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(80,120,2), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(120,120,2), simProc(80,140,2), simProc(80,120,1)) dfac$.response(rend)  # Create an interaction plot interactionPlot(dfac, fun = mean, col = c(\"purple\", \"red\"))   # Example 2 vp <- fracDesign(k=3, replicates = 2) y <- 4*vp$get(j=1) -7*vp$get(j=2) + 2*vp$get(j=2)*vp$get(j=1) +      0.2*vp$get(j=3) + rnorm(16) vp$.response(y)  interactionPlot(vp)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":null,"dir":"Reference","previous_headings":"","what":"mixDesign-class: Class `mixDesign` — mixDesign.c","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"mixDesign class simplex lattice simplex centroid mixture designs optional center points augmented points.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"name Character string representing name design. factors List factors involved mixture design, including levels settings. total Numeric value representing total number runs design. lower Numeric vector representing lower bounds factors design. design Data frame containing design matrix mixture design. designType Character string specifying type design (e.g., \"simplex-lattice\", \"simplex-centroid\"). pseudo Data frame containing pseudo-experimental runs applicable. response Data frame containing responses outcomes measured design. Type Data frame specifying type design used (e.g., \"factorial\", \"response surface\"). block Data frame specifying block structures design blocked. runOrder Data frame specifying order runs performed. standardOrder Data frame specifying standard order runs. desireVal List desired values targets response variables. desirability List desirability scores metrics based desired values. fits Data frame containing fitted model parameters diagnostics.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"mixDesign.c$.factors() mixDesign.c$names() mixDesign.c$.data.frame() mixDesign.c$print() mixDesign.c$.response() mixDesign.c$.nfp() mixDesign.c$summary() mixDesign.c$units() mixDesign.c$lows() mixDesign.c$highs() mixDesign.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-factors-","dir":"Reference","previous_headings":"","what":"Method .factors()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set factors object class mixDesign","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$.factors(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New factors, missing value get factors.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set names object class mixDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New names, missing value get names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Methods function .data.frame Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Methods function print Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method .response()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set response object class mixDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$.response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New response, missing value get response.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-nfp-","dir":"Reference","previous_headings":"","what":"Method .nfp()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Prints summary factors attributes including low, high, name, unit, type.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$.nfp()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Methods function summary Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-units-","dir":"Reference","previous_headings":"","what":"Method units()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set units factors object class mixDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$units(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New units, missing value get units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-lows-","dir":"Reference","previous_headings":"","what":"Method lows()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set lows factors object class mixDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$lows(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New lows, missing value get lows.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-highs-","dir":"Reference","previous_headings":"","what":"Method highs()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"Get set highs factors object class mixDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$highs(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"value New highs, missing value get highs.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"","code":"mixDesign.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.c.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign-class: Class `mixDesign` — mixDesign.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"mixDesign: Mixture Designs — mixDesign","title":"mixDesign: Mixture Designs — mixDesign","text":"Function generate simplex lattice simplex centroid mixture designs optional center points axial points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mixDesign: Mixture Designs — mixDesign","text":"","code":"mixDesign(   p,   n = 3,   type = \"lattice\",   center = TRUE,   axial = FALSE,   delta,   replicates = 1,   lower,   total = 1,   randomize,   seed = 1234 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mixDesign: Mixture Designs — mixDesign","text":"p Numerical value giving amount factors. n Numerical value specifying degree (ignored type = `centroid`). type Character string giving type design. type can `lattice` `centroid` (referencing first source section references]. default type set `lattice`. center Logical value specifying whether (optional) center points added. default `center` set `TRUE`. axial Logical value specifying whether (optional) axial points added. default `axial` set `FALSE`. delta Numerical value giving delta (see references) axial runs. default setting. replicates Vector number replicates different design points .e. c(center = 1, axial = 1, pureBlend = 1, BinaryBlend = 1, p-3 blend, p-2 blend, p-1 blend). default `replicates` set `1`. lower Numeric vector lower-bound constraints component proportions (.e. must given percent). total Numeric vector [1] percentage mixture made q - components (e.g. q = 3 x1 + x2 + x3 = 0.8, total = 0.8 0.2 factors held constant) [2] overall total corresponding units (e.g. 200ml overall mixture) randomize Logical value. `TRUE` RunOrder mixture design randomized (default). seed Nmerical value giving input set.seed.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mixDesign: Mixture Designs — mixDesign","text":"function mixDesig() returns object class mixDesig().","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"mixDesign: Mixture Designs — mixDesign","text":"version creation (augmented) lattice, centroid mixture designs fully supported. Getters Setter methods mixDesign object exist just objects class facDesign (.e. factorial designs). creation constrained component proportions partially supported rely . Visualization (.e. ternary plots) designs can done help wirePlot3 contourPlot3 function.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mixDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mixDesign: Mixture Designs — mixDesign","text":"","code":"# Example usage of mixDesign mdo <- mixDesign(3, 2, center = FALSE, axial = FALSE, randomize = FALSE, replicates = c(1, 1, 2, 3))  mdo$names(c(\"polyethylene\", \"polystyrene\", \"polypropylene\")) elongation <- c(11.0, 12.4, 15.0, 14.8, 16.1, 17.7,                 16.4, 16.6, 8.8, 10.0, 10.0, 9.7,                 11.8, 16.8, 16.0) mdo$.response(elongation)  mdo$units() #> $polyethylene #> [1] \"%\" #>  #> $polystyrene #> [1] \"%\" #>  #> $polypropylene #> [1] \"%\" #>  mdo$summary() #> Simplex LATTICE Design #> Information about the factors: #>  #>      polyethylene polystyrene polypropylene #> low             0           0             0 #> high            1           1             1 #> name polyethylene polystyrene polypropylene #> unit            %           %             % #> type      numeric     numeric       numeric #>  #> ----------- #>  #> Information about the Design Points: #>  #>            1-blend 2-blend #> Unique           3       3 #> Replicates       2       3 #> Sub Total        6       9 #> Total           15         #>  #> ----------- #>  #> Information about the constraints: #>  #> A >= 0 B >= 0 C >= 0 #>  #> ----------- #>  #>                               PseudoComponent _|_ Proportion _|_ Amount #>  #>    StandOrder RunOrder    Type |   A   B   C _ | _   A   B   C _ | _   A   B #> 1           1        1 1-blend | 1.0 0.0 0.0   |   1.0 0.0 0.0   |   1.0 0.0 #> 2           2        2 1-blend | 1.0 0.0 0.0   |   1.0 0.0 0.0   |   1.0 0.0 #> 3           3        3 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 4           4        4 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 5           5        5 2-blend | 0.5 0.5 0.0   |   0.5 0.5 0.0   |   0.5 0.5 #> 6           6        6 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 7           7        7 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 8           8        8 2-blend | 0.5 0.0 0.5   |   0.5 0.0 0.5   |   0.5 0.0 #> 9           9        9 1-blend | 0.0 1.0 0.0   |   0.0 1.0 0.0   |   0.0 1.0 #> 10         10       10 1-blend | 0.0 1.0 0.0   |   0.0 1.0 0.0   |   0.0 1.0 #> 11         11       11 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 12         12       12 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 13         13       13 2-blend | 0.0 0.5 0.5   |   0.0 0.5 0.5   |   0.0 0.5 #> 14         14       14 1-blend | 0.0 0.0 1.0   |   0.0 0.0 1.0   |   0.0 0.0 #> 15         15       15 1-blend | 0.0 0.0 1.0   |   0.0 0.0 1.0   |   0.0 0.0 #>      C | elongation #> 1  0.0 |       11.0 #> 2  0.0 |       12.4 #> 3  0.0 |       15.0 #> 4  0.0 |       14.8 #> 5  0.0 |       16.1 #> 6  0.5 |       17.7 #> 7  0.5 |       16.4 #> 8  0.5 |       16.6 #> 9  0.0 |        8.8 #> 10 0.0 |       10.0 #> 11 0.5 |       10.0 #> 12 0.5 |        9.7 #> 13 0.5 |       11.8 #> 14 1.0 |       16.8 #> 15 1.0 |       16.0 #>  #> ----------- #>  #> Mixture Total: 1 equals 1 #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mvPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"mvPlot: Function to create a multi-variable plot — mvPlot","title":"mvPlot: Function to create a multi-variable plot — mvPlot","text":"Creates plot visualizing relationships response variable multiple factors.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mvPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mvPlot: Function to create a multi-variable plot — mvPlot","text":"","code":"mvPlot(   response,   fac1,   fac2,   fac3,   fac4,   sort = TRUE,   col,   pch,   labels = FALSE,   quantile = TRUE,   FUN = NA )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mvPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mvPlot: Function to create a multi-variable plot — mvPlot","text":"response values response vector.response must declared. fac1 Vector providing factor 1 shown example.fac1 must declared. fac2 Vector providing factor 1 shown example.fac2 must declared. fac3 Optional vector providing factor 3 shown example. fac4 Optional vector providing factor 4 shown example. sort Logical value indicating whether sequence factors given fac1 - fac4 reordered minimize space needed visualize Multi-Vari-Chart. default sort set `TRUE`. col Graphical parameter. Vector containing numerical values character strings giving colors different factors. default col starts value `3` continued needed. pch Graphical parameter. Vector containing numerical values single characters giving plotting points different factors. See points possible values interpretation. Note integers single-character strings can set graphics parameter (NA NULL). default pch starts value `1` continued needed. labels Logical value indicating whether single points labels row-number data.frame invisibly returned function mvPlot. default labels set `FALSE`. quantile logical value indicating whether quanitiles (0.00135, 0.5 & 0.99865) visualized single groups. default quantile set `TRUE`. FUN optional function used calculation response unique settings factors e.g. mean. default FUN set `NA` therfore omitted.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mvPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mvPlot: Function to create a multi-variable plot — mvPlot","text":"mvPlot returns invisible list cointaining: data.frame plotted points listed final plot. option labels can used plot row-numbers single points ease identification.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/mvPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mvPlot: Function to create a multi-variable plot — mvPlot","text":"","code":"#Example I examp1 = expand.grid(c(\"Engine1\",\"Engine2\",\"Engine3\"),c(10,20,30,40)) examp1 = as.data.frame(rbind(examp1, examp1, examp1)) examp1 = cbind(examp1, rnorm(36, 1, 0.02)) names(examp1) = c(\"factor1\", \"factor2\", \"response\") mvPlot(response = examp1[,3], fac1 = examp1[,2],fac2 = examp1[,1],sort=FALSE,FUN=mean)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"normalPlot: Normal plot — normalPlot","title":"normalPlot: Normal plot — normalPlot","text":"Creates normal probability plot effects facDesign.c object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"normalPlot: Normal plot — normalPlot","text":"","code":"normalPlot(   dfac,   response = NULL,   main,   ylim,   xlim,   xlab,   ylab,   pch,   col,   border = \"red\" )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"normalPlot: Normal plot — normalPlot","text":"dfac object class facDesign.c. response Response variable. response data frame fdo consists one responses, variable can used choose just one column response data frame. response needs object class character length `1`. needs character name response response data frame plotted. default respons` set NULL. main Character string specifying main title plot. ylim Graphical parameter. y limits plot. xlim Graphical parameter. x limits (x1, x2) plot. Note x1 > x2 allowed leads `reversed axis`. xlab Character string specifying label x-axis. ylab Character string specifying label y-axis. pch Graphical parameter. Vector containing numerical values single characters giving plotting points different factors. Accepts values 0 25, corresponding specific shape ggplot2 (e.g., 0: square, 1: circle, 2: triangle point , 3: plus, 4: cross). col Graphical parameter. Single numerical value character string giving color points (e.g., 1: black, 2: red, 3: green). border Graphical parameter. Single numerical value character string giving color border line.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"normalPlot: Normal plot — normalPlot","text":"function normalPlot returns invisible list containing: effects list effects response facDesign.c object. plot generated normal plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"normalPlot: Normal plot — normalPlot","text":"given facDesign.c object fdo contains replicates function deliver normal plot .e.: effects divided standard deviation (t-value) plotted appropriate probability scaling (see: `ppoints`). given facDesign.c object fdo contains replications standard error can calculated. case function deliver effect plot. .e.: effects plotted appropriate probability scaling. (see: `ppoints`).","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/normalPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"normalPlot: Normal plot — normalPlot","text":"","code":"# Example 1: Create a normal probability plot for a full factorial design dfac <- facDesign(k = 3, centerCube = 4) dfac$names(c('Factor 1', 'Factor 2', 'Factor 3'))  # Assign performance to the factorial design rend <- c(simProc(120,140,1), simProc(80,140,1), simProc(120,140,2),           simProc(120,120,1), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(80,120,2), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(120,120,2), simProc(80,140,2), simProc(80,120,1)) dfac$.response(rend)  normalPlot(dfac)   # Example 2: Create a normal probability plot with custom colors and symbols normalPlot(dfac, col = \"blue\", pch = 4)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":null,"dir":"Reference","previous_headings":"","what":"oaChoose: Taguchi Designs — oaChoose","title":"oaChoose: Taguchi Designs — oaChoose","text":"Shows matrix possible taguchi designs.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"oaChoose: Taguchi Designs — oaChoose","text":"","code":"oaChoose(factors1, factors2, level1, level2, ia)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"oaChoose: Taguchi Designs — oaChoose","text":"factors1 Number factors level1. factors2 Number factors level2. level1 Number levels level1. level2 Number levels level2. ia Number interactions.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"oaChoose: Taguchi Designs — oaChoose","text":"oaChoose returns object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"oaChoose: Taguchi Designs — oaChoose","text":"oaChoose returns possible taguchi designs. Specifying number factor1 factors level1 levels (factors1 = 2, level1 = 3 means 2 factors 3 factor levels) factor2 factors level2 levels desired interactions one taguchi designs suggested. parameters set `0`, matrix possible taguchi designs shown.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/oaChoose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"oaChoose: Taguchi Designs — oaChoose","text":"","code":"oaChoose()  #>  #> Choose a taguchi design by clicking into the appropriate field #> Waiting for your selection: #>  #>   StandOrder RunOrder Replicate A B C  y #> 1          4        1         1 2 2 1 NA #> 2          3        2         1 2 1 2 NA #> 3          1        3         1 1 1 1 NA #> 4          2        4         1 1 2 2 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":null,"dir":"Reference","previous_headings":"","what":"optimum: Optimal factor settings — optimum","title":"optimum: Optimal factor settings — optimum","text":"function calculates optimal factor settings based defined desirabilities constraints. supports two approaches: () evaluating possible factor settings via grid search (II) using optimization methods `optim` `gosolnp` Rsolnp package. Using `optim` initial values factors optimized can set via start. optimality solution depends critically starting parameters recommended use type=`gosolnp` although calculation takes .","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"optimum: Optimal factor settings — optimum","text":"","code":"optimum(fdo, constraints, steps = 25, type = \"grid\", start)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"optimum: Optimal factor settings — optimum","text":"fdo object class facDesign.c fits desires set. constraints list specifying constraints factors, e.g., list(= c(-2,1), B = c(0, 0.8)). steps Number grid points per factor type = `grid`. Default `25`. type type search perform. Supported values `grid`, `optim`, `gosolnp`. See Details information. start numeric vector providing initial values factors using type = `optim`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"optimum: Optimal factor settings — optimum","text":"Return object class desOpt.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"optimum: Optimal factor settings — optimum","text":"function allows optimize factor settings either evaluating grid possible settings (type = `grid`) using optimization algorithms (type = `optim` `gosolnp`). choice optimization method may significantly affect result, especially desirability functions lack continuous first derivatives. using type = `optim`, advisable provide start values avoid local optima. `gosolnp` method recommended robustness, although may computationally intensive.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/optimum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"optimum: Optimal factor settings — optimum","text":"","code":"#Example 1: Simultaneous Optimization of Several Response Variables #Define the response surface design as given in the paper and sort via Standard Order fdo = rsmDesign(k = 3, alpha = 1.633, cc = 0, cs = 6) fdo = randomize(fdo, so = TRUE) #Attaching the 4 responses y1 = c(102, 120, 117, 198, 103, 132,         132, 139, 102, 154, 96, 163,         116, 153, 133, 133, 140, 142,         145, 142)  y2 = c(900, 860, 800, 2294, 490, 1289,         1270, 1090, 770, 1690, 700, 1540,         2184, 1784, 1300, 1300, 1145, 1090,         1260, 1344)  y3 = c(470, 410, 570, 240, 640, 270,         410, 380, 590, 260, 520, 380,         520, 290, 380, 380, 430, 430,         390, 390)  y4 = c(67.5, 65, 77.5, 74.5, 62.5, 67,         78, 70, 76, 70, 63, 75,         65, 71, 70, 68.5, 68, 68,         69, 70) fdo$.response(data.frame(y1, y2, y3, y4)[c(5,2,3,8,1,6,7,4,9:20),]) #Setting names and real values of the factors fdo$names(c(\"silica\", \"silan\", \"sulfur\")) fdo$highs(c(1.7, 60, 2.8)) fdo$lows(c(0.7, 40, 1.8)) #Setting the desires fdo$desires(desirability(y1, 120, 170, scale = c(1,1), target = \"max\")) fdo$desires(desirability(y2, 1000, 1300, target = \"max\")) fdo$desires(desirability(y3, 400, 600, target = 500)) fdo$desires(desirability(y4, 60, 75, target = 67.5)) #Setting the fits fdo$set.fits(fdo$lm(y1 ~ A + B + C + A:B + A:C + B:C + I(A^2) + I(B^2) + I(C^2))) fdo$set.fits(fdo$lm(y2 ~ A + B + C + A:B + A:C + B:C + I(A^2) + I(B^2) + I(C^2))) fdo$set.fits(fdo$lm(y3 ~ A + B + C + A:B + A:C + B:C + I(A^2) + I(B^2) + I(C^2))) fdo$set.fits(fdo$lm(y4 ~ A + B + C + A:B + A:C + B:C + I(A^2) + I(B^2) + I(C^2))) #Calculate the best factor settings using type = \"optim\" optimum(fdo, type = \"optim\") #>  #> composite (overall) desirability: 0.583 #>  #>        silica  silan sulfur #> coded -0.0533  0.144 -0.872 #> real   1.1733 51.442  1.864 #>  #>                     y1   y2      y3     y4 #> Responses      129.333 1300 466.397 67.997 #> Desirabilities   0.187    1   0.664  0.934 #Calculate the best factor settings using type = \"grid\" optimum(fdo, type = \"grid\") #>  #> composite (overall) desirability: 0.58 #>  #>       silica  silan sulfur #> coded    0.0  0.136 -0.817 #> real     1.2 51.361  1.892 #>  #>                     y1       y2      y3     y4 #> Responses      130.660 1299.669 456.937 67.980 #> Desirabilities   0.213    0.999   0.569  0.936"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/overall.html","id":null,"dir":"Reference","previous_headings":"","what":"overall: Overall Desirability. — overall","title":"overall: Overall Desirability. — overall","text":"function calculates desirability response well overall desirability. resulting data.frame can used plot overall desirability well desirabilities response. function designed visualize desirability approach multiple response optimization.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/overall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"overall: Overall Desirability. — overall","text":"","code":"overall(fdo, steps = 20, constraints, ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/overall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"overall: Overall Desirability. — overall","text":"fdo object class facDesign.c containing fits desires. steps numeric value indicating number points per factor evaluated, also specifies grid size. Default `20`. constraints list constraints factors coded values, list(> 0.5, B < 0.2). ... arguments passed methods.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/overall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"overall: Overall Desirability. — overall","text":"data.frame column factor, desirability response, column overall desirability.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/overall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"overall: Overall Desirability. — overall","text":"","code":"#Example 1: Arbitrary example with random data rsdo = rsmDesign(k = 2, blocks = 2, alpha = \"both\") rsdo$.response(data.frame(y = rnorm(rsdo$nrow()), y2 = rnorm(rsdo$nrow()))) rsdo$set.fits(rsdo$lm(y ~ A*B + I(A^2) + I(B^2))) rsdo$set.fits(rsdo$lm(y2 ~ A*B + I(A^2) + I(B^2))) rsdo$desires(desirability(y, -1, 2, scale = c(1, 1), target = \"max\")) rsdo$desires(desirability(y2, -1, 0, scale = c(1, 1), target = \"min\")) dVals = overall(rsdo, steps = 10, constraints = list(A = c(-0.5,1), B = c(0, 1)))"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoChart.html","id":null,"dir":"Reference","previous_headings":"","what":"paretoChart: Pareto Chart — paretoChart","title":"paretoChart: Pareto Chart — paretoChart","text":"Function create Pareto chart, displaying relative frequency categories.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoChart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"paretoChart: Pareto Chart — paretoChart","text":"","code":"paretoChart(   x,   weight,   main,   col,   border,   xlab,   ylab = \"Frequency\",   percentVec,   showTable = TRUE,   showPlot = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoChart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"paretoChart: Pareto Chart — paretoChart","text":"x vector qualitative values. weight numeric vector weights corresponding category x. main character string main title plot. col numerical value character string defining fill-color bars. border numerical value character string defining border-color bars. xlab character string x-axis label. ylab character string y-axis label. default, ylab set `Frequency`. percentVec numerical vector giving position values tick marks percentage axis. showTable Logical value indicating whether display table frequencies. default, showTable set TRUE. showPlot Logical value indicating whether display Pareto chart. default, showPlot set TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoChart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"paretoChart: Pareto Chart — paretoChart","text":"paretoChart returns Pareto chart along frequency table showTable TRUE. Additionally, function returns invisible list containing: plot generated Pareto chart. table data.frame frequencies percentages categories.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoChart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"paretoChart: Pareto Chart — paretoChart","text":"","code":"# Example 1: Creating a Pareto chart for defect types defects1 <- c(rep(\"E\", 62), rep(\"B\", 15), rep(\"F\", 3), rep(\"A\", 10),               rep(\"C\", 20), rep(\"D\", 10)) paretoChart(defects1)   # Example 2: Creating a Pareto chart with weighted frequencies defects2 <- c(\"E\", \"B\", \"F\", \"A\", \"C\", \"D\") frequencies <- c(62, 15, 3, 10, 20, 10) weights <- c(1.5, 2, 0.5, 1, 1.2, 1.8) names(weights) <- defects2  # Assign names to the weights vector  paretoChart(defects2, weight = frequencies * weights)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"paretoPlot — paretoPlot","title":"paretoPlot — paretoPlot","text":"Display standardized effects interactions facDesign.c object pareto plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"paretoPlot — paretoPlot","text":"","code":"paretoPlot(   dfac,   abs = TRUE,   decreasing = TRUE,   alpha = 0.05,   response = NULL,   ylim,   xlab,   ylab,   main,   p.col,   legend_left = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"paretoPlot — paretoPlot","text":"dfac object class facDesign. abs Logical. TRUE, absolute effects interactions displayed. Default TRUE. decreasing Logical. TRUE, effects interactions sorted decreasing. Default TRUE. alpha significance level used calculate critical value response Response variable. response data frame fdo consists one responses, variable can used choose just one column response data frame. response needs object class character length `1`. needs character name response response data frame plotted. default response set NULL. ylim Numeric vector length 2: limits y-axis. missing, limits set automatically. xlab Character string: label x-axis. ylab Character string: label y-axis. main Character string: title plot. p.col Character string specifying color palette use plot. Must one following values RColorBrewer package: `Set1` `Set2` `Set3` `Pastel1` `Pastel2` `Paired` `Dark2` `Accent` legend_left Logical value indicating whether place legend left side plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"paretoPlot — paretoPlot","text":"function paretoPlot returns invisible list containing: effects list effects response facDesign.c object plot generated PP plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"paretoPlot — paretoPlot","text":"paretoPlot displays pareto plot effects interactions object class facDesign (.e. 2^k full 2^k-p fractional factorial design). given significance level alpha, critical value calculated added plot. Standardization achieved dividing estimates standard error. unreplicated fractional factorial designs Lenth Plot generated.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/paretoPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"paretoPlot — paretoPlot","text":"","code":"# Create the facDesign object dfac <- facDesign(k = 3, centerCube = 4) dfac$names(c('Factor 1', 'Factor 2', 'Factor 3'))  # Assign performance to the factorial design rend <- c(simProc(120,140,1), simProc(80,140,1), simProc(120,140,2),           simProc(120,120,1), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(80,120,2), simProc(90,130,1.5), simProc(90,130,1.5),           simProc(120,120,2), simProc(80,140,2), simProc(80,120,1)) dfac$.response(rend)  paretoPlot(dfac)  paretoPlot(dfac, decreasing = TRUE, abs = FALSE, p.col = \"Pastel1\")"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":null,"dir":"Reference","previous_headings":"","what":"pbDesign — pbDesign.c","title":"pbDesign — pbDesign.c","text":"R6 class representing Plackett-Burman design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"pbDesign — pbDesign.c","text":"name character string specifying name design. Default NULL. factors list factors included Taguchi design. factor typically instance pbFactor class. design data.frame representing design matrix experiment. includes levels factor every run experiment. Default empty data.frame. designType character string specifying type Taguchi design used. Default NULL. replic data.frame containing replication information design. Default empty data.frame. response data.frame storing response values collected experiment. Default empty data.frame. Type data.frame specifying type responses factors involved design. Default empty data.frame. block data.frame indicating blocking factors used design. Default empty data.frame. runOrder data.frame detailing order experimental runs conducted. Default empty data.frame. standardOrder data.frame detailing standard order experimental runs. Default empty data.frame. desireVal list storing desired values responses experiment. Default empty list. desirability list storing desirability functions used evaluate outcomes experiment. Default empty list. fits data.frame containing model fits statistical summaries analysis experimental data. Default empty data.frame.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"pbDesign — pbDesign.c","text":"pbDesign.c$values() pbDesign.c$units() pbDesign.c$.factors() pbDesign.c$names() pbDesign.c$.data.frame() pbDesign.c$print() pbDesign.c$.response() pbDesign.c$.nfp() pbDesign.c$summary() pbDesign.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-values-","dir":"Reference","previous_headings":"","what":"Method values()","title":"pbDesign — pbDesign.c","text":"Get set values object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$values(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"value New value, missing value get values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-units-","dir":"Reference","previous_headings":"","what":"Method units()","title":"pbDesign — pbDesign.c","text":"Get set units object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$units(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"value New units, missing value get units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-factors-","dir":"Reference","previous_headings":"","what":"Method .factors()","title":"pbDesign — pbDesign.c","text":"Get set factors object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$.factors(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"value New factors, missing value get factors.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"pbDesign — pbDesign.c","text":"Get set names object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"value New names, missing value get names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"pbDesign — pbDesign.c","text":"Return data frame information object pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"pbDesign — pbDesign.c","text":"Methods function print Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method .response()","title":"pbDesign — pbDesign.c","text":"Get set response object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$.response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"value New response, missing value get response.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-nfp-","dir":"Reference","previous_headings":"","what":"Method .nfp()","title":"pbDesign — pbDesign.c","text":"Prints summary factors attributes including low, high, name, unit, type.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$.nfp()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"pbDesign — pbDesign.c","text":"Methods function summary Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"pbDesign — pbDesign.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign — pbDesign.c","text":"","code":"pbDesign.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.c.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign — pbDesign.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"pbDesign: Plackett-Burman Designs — pbDesign","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"Function create Plackett-Burman  design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"","code":"pbDesign(n, k, randomize = TRUE, replicates = 1)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"n Integer value giving number trials. k Integer value giving number factors. randomize logical value (TRUE/FALSE) specifies whether randomize RunOrder design. default, randomize set TRUE. replicates integer specifying number replicates run design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"pbDesign returns object class pbDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"function creates Placket-Burman Designs n=26. Bigger Designs implemented lack practicability. creation either number factors number trials can denoted. Wrong combinations lead error message. Originally Placket-Burman-Design applicable number trials divisible 4. n divisble 4 function take next larger Placket-Burman Design truncate last rows columns.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pbDesign: Plackett-Burman Designs — pbDesign","text":"","code":"pbdo<- pbDesign(n=5) pbdo$summary() #> Plackett-Burman  Design #> Information about the factors: #>  #>               A       B       C       D #> value 1      -1      -1      -1      -1 #> value 2       1       1       1       1 #> name                                    #> unit                                    #> type    numeric numeric numeric numeric #>  #> ----------- #>  #>   StandOrder RunOrder Replicate  A  B  C  D  y #> 1          4        1         1  1  1 -1  1 NA #> 2          5        2         1 -1 -1 -1 -1 NA #> 3          1        3         1  1  1  1 -1 NA #> 4          2        4         1 -1  1  1  1 NA #> 5          3        5         1  1 -1  1  1 NA #>  #> ----------- #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"pbFactor — pbFactor","title":"pbFactor — pbFactor","text":"R6 class representing factor Plackett-Burman design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"pbFactor — pbFactor","text":"values vector containing levels values associated factor. Default NA. name character string specifying name factor. Default empty string ``. unit character string specifying unit measurement factor. Default empty string ``. type character string specifying type factor, can either `numeric` `categorical`. Default `numeric`.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"pbFactor — pbFactor","text":"pbFactor$attributes() pbFactor$.values() pbFactor$.unit() pbFactor$names() pbFactor$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"method-attributes-","dir":"Reference","previous_headings":"","what":"Method attributes()","title":"pbFactor — pbFactor","text":"Get attributes factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pbFactor — pbFactor","text":"","code":"pbFactor$attributes()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"method-values-","dir":"Reference","previous_headings":"","what":"Method .values()","title":"pbFactor — pbFactor","text":"Get set values factors object class pbFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"pbFactor — pbFactor","text":"","code":"pbFactor$.values(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbFactor — pbFactor","text":"value New values, missing value get values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"method-unit-","dir":"Reference","previous_headings":"","what":"Method .unit()","title":"pbFactor — pbFactor","text":"Get set units factors object class pbFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"pbFactor — pbFactor","text":"","code":"pbFactor$.unit(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbFactor — pbFactor","text":"value New unit, missing value get units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"pbFactor — pbFactor","text":"Get set names object class pbFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"pbFactor — pbFactor","text":"","code":"pbFactor$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbFactor — pbFactor","text":"value New names, missing value get names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"pbFactor — pbFactor","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"pbFactor — pbFactor","text":"","code":"pbFactor$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pbFactor.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"pbFactor — pbFactor","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":null,"dir":"Reference","previous_headings":"","what":"pcr: Process Capability Indices — pcr","title":"pcr: Process Capability Indices — pcr","text":"Calculates process capability cp, cpk, cpkL (onesided) cpkU (onesided) given dataset distribution. histogram density curve displayed along specification limits Quantile-Quantile Plot specified distribution. Lower-, upper total fraction nonconforming entities calculated. Box-Cox Transformations supported well calculation Anderson Darling Test Statistics.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pcr: Process Capability Indices — pcr","text":"","code":"pcr(   x,   distribution = \"normal\",   lsl,   usl,   target,   boxcox = FALSE,   lambda = c(-5, 5),   main,   xlim,   grouping = NULL,   std.dev = NULL,   conf.level = 0.9973002,   bounds.lty = 3,   bounds.col = \"red\",   col.fill = \"lightblue\",   col.border = \"black\",   col.curve = \"red\",   plot = TRUE,   ADtest = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pcr: Process Capability Indices — pcr","text":"x Numeric vector containing values process capability calculated. distribution Character string specifying distribution x. function cp accept following character strings distribution: `normal` `log-normal` `exponential` `logistic` `gamma` `weibull` `cauchy` `gamma3` `weibull3` `lognormal3` `beta` `f` `geometric` `poisson` `negative-binomial` default distribution set `normal`. lsl numeric value specifying lower specification limit. usl numeric value specifying upper specification limit. target (Optional) numeric value giving target value. boxcox Logical value specifying whether Box-Cox transformation performed . default boxcox set FALSE. lambda (Optional) lambda transformation, default function estimate lambda. main character string specifying main title plot. xlim numeric vector length 2 specifying x-axis limits plot. grouping (Optional) grouping given standard deviation calculated mean standard deviation specified subgroups corrected factor c4 expected fraction nonconforming calculated using standard deviation. std.dev optional numeric value specifying historical standard deviation (provided normal distribution). NULL, standard deviation calculated data. conf.level Numeric value 0 1 giving confidence interval. default conf.level 0.9973 (99.73%) reference interval bounded 99.865% 0.135% quantile. bounds.lty graphical parameter. details see ppPlot qqPlot. bounds.col character string specifying color capability bounds. Default \"red\". col.fill character string specifying fill color histogram plot. Default \"lightblue\". col.border character string specifying border color histogram plot. Default \"black\". col.curve character string specifying color fitted distribution curve. Default \"red\". plot logical value indicating whether generate plot. Default TRUE. ADtest logical value indicating whether print Anderson-Darling. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pcr: Process Capability Indices — pcr","text":"function returns list following components: function pcr returns list lambda, cp, cpl, cpu, ppt, ppl, ppu, , usl, lsl, target, asTest, plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pcr: Process Capability Indices — pcr","text":"Distribution fitting delegated function FitDistr package, well calculation lambda Box-Cox Transformation. p-values Anderson-Darling Test reported important distributions. process capability indices calculated follows: cpk: minimum cpK cpL. pt: total fraction nonconforming. pu: upper fraction nonconforming. pl: lower fraction nonconforming. cp: process capability index. cpkL: lower process capability index. cpkU: upper process capability index. cpk: minimum process capability index. Box-Cox transformation, data vector positive values needed estimate optimal value lambda Box-Cox power transformation values. Box-Cox power transformation used bring distribution data vector closer normality. Estimation optimal lambda delegated function boxcox MASS package. Box-Cox transformation form \\(y(\\lambda) = \\frac{y^\\lambda - 1}{\\lambda}\\) \\(\\lambda \\neq 0\\), \\(y(\\lambda) = \\log(y)\\) \\(\\lambda = 0\\). function boxcox computes profile log-likelihoods range values parameter lambda. function boxcox.lambda returns value lambda maximum profile log-likelihood. case specification limits given, lsl usl calculated support process capability index 1.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pcr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pcr: Process Capability Indices — pcr","text":"","code":"set.seed(1234) data <- rnorm(20, mean = 20) pcr(data, \"normal\", lsl = 17, usl = 23) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> \tAnderson Darling Test for normal distribution #>  #> data:  data  #> A = 0.5722, mean = 19.749, sd = 1.014, p-value = 0.1191 #> alternative hypothesis: true distribution is not equal to normal    set.seed(1234) weib <- rweibull(20, shape = 2, scale = 8) pcr(weib, \"weibull\", usl = 20) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> \tAnderson Darling Test for weibull distribution #>  #> data:  weib  #> A = 0.4183, shape = 2.290, scale = 8.382, p-value <= 0.25 #> alternative hypothesis: true distribution is not equal to weibull"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":null,"dir":"Reference","previous_headings":"","what":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"Density function, distribution function, quantile function Gamma distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"","code":"pgamma3(q, shape, scale, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"q numeric vector quantiles. shape shape parameter, default 1. scale scale parameter, default 1. threshold threshold parameter, default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"dgamma3 gives density, pgamma3 gives distribution function, qgamma3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"Gamma distribution scale parameter alpha, shape parameter c, threshold parameter zeta density given : $$f(x) = \\frac{c}{\\alpha}\\left(\\frac{x-\\zeta}{\\alpha}\\right)^{c-1}\\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pgamma3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pgamma3: The gamma Distribution (3 Parameter) — pgamma3","text":"","code":"dgamma3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 0.01532831 temp <- pgamma3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.003659847 qgamma3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999981"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":null,"dir":"Reference","previous_headings":"","what":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"Density function, distribution function, quantile function Lognormal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"","code":"plnorm3(q, meanlog, sdlog, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"q numeric vector quantiles. meanlog, sdlog mean standard deviation distribution log scale default values 0 1 respectively. threshold threshold parameter, default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"dlnorm3 gives density, plnorm3 gives distribution function, qlnorm3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"Lognormal distribution meanlog parameter zeta, sdlog parameter sigma, threshold parameter theta density given : $$f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma(x-\\theta)}\\exp\\left(-\\frac{(\\log(x-\\theta)-\\zeta)^2}{2\\sigma^2}\\right)$$ cumulative distribution function given : $$F(x) = \\Phi\\left(\\frac{\\log(x-\\theta)-\\zeta}{\\sigma}\\right)$$ \\(\\Phi\\) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/plnorm3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plnorm3: The Lognormal Distribution (3 Parameter) — plnorm3","text":"","code":"dlnorm3(x = 2, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 3.191538 temp <- plnorm3(q = 2, meanlog = 0, sdlog = 1/8, threshold = 1) temp #> [1] 0.5 qlnorm3(p = temp, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 2.000004"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"ppPlot: Probability Plots for various distributions — ppPlot","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"Function ppPlot creates Probability plot values x including line.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"","code":"ppPlot(   x,   distribution,   confbounds = TRUE,   alpha,   probs,   main,   xlab,   ylab,   xlim,   ylim,   border = \"red\",   bounds.col = \"black\",   bounds.lty = 1,   start,   showPlot = TRUE,   axis.y.right = FALSE,   bw.theme = FALSE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"x Numeric vector containing sample data ppPlot. distribution Character string specifying distribution x. function ppPlot support following character strings distribution: `beta` `cauchy` `chi-squared` `exponential` `f` `gamma` `geometric` `log-normal` `lognormal` `logistic` `negative binomial` `normal` `Poisson` `weibull` default distribution set `normal`. confbounds Logical value: whether display confidence bounds. Default TRUE. alpha Numeric value: significance level confidence bounds, default `0.05`. probs Vector containing percentages y axis. values need `0` `1`. `probs` missing calculated internally. main Character string: title plot. xlab Character string: label x-axis. ylab Character string: label y-axis. xlim Numeric vector length 2: limits x-axis. ylim Numeric vector length 2: limits y-axis. border Character numeric: color border line quantiles. Default `red`. bounds.col Character numeric: color confidence bounds lines. Default `black`. bounds.lty Numeric character: line type confidence bounds lines. can specified either integer (0-6) name: 0: blank 1: solid 2: dashed 3: dotted 4: dotdash 5: longdash 6: twodash Default `1` (solid line). start named list giving parameters fitted initial values. Must supplied distributions (see Details). showPlot Logical value indicating whether display plot. default, showPlot set TRUE. axis.y.right Logical value indicating whether display y-axis right side. default, axis.y.right set FALSE. bw.theme Logical value indicating whether use black--white theme ggplot2 package plot. default, bw.theme set FALSE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"function ppPlot returns invisible list containing: x x coordinates. y y coordinates. int Intercept. slope Slope. plot generated PP plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"Distribution fitting performed using FitDistr function package. computation confidence bounds, variance quantiles estimated using delta method, involves estimation observed Fisher Information matrix well gradient CDF fitted distribution. possible, values replaced normal approximation.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/ppPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ppPlot: Probability Plots for various distributions — ppPlot","text":"","code":"set.seed(123) ppPlot(rnorm(20, mean=90, sd=5), \"normal\",alpha=0.30)  ppPlot(rcauchy(100), \"cauchy\")  ppPlot(rweibull(50, shape = 1, scale = 1), \"weibull\")  ppPlot(rlogis(50), \"logistic\")  ppPlot(rlnorm(50) , \"log-normal\")  ppPlot(rbeta(10, 0.7, 1.5),\"beta\")  ppPlot(rpois(20,3), \"poisson\")  ppPlot(rchisq(20, 10),\"chi-squared\")  ppPlot(rgeom(20, prob = 1/4), \"geometric\")  ppPlot(rnbinom(n = 20, size = 3, prob = 0.2), \"negative binomial\")  ppPlot(rf(20, df1 = 10, df2 = 20), \"f\")"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/print_adtest.html","id":null,"dir":"Reference","previous_headings":"","what":"print_adtest: Test Statistics — print_adtest","title":"print_adtest: Test Statistics — print_adtest","text":"Function show adtest.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/print_adtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print_adtest: Test Statistics — print_adtest","text":"","code":"print_adtest(x, digits = 4, quote = TRUE, prefix = \"\", ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/print_adtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print_adtest: Test Statistics — print_adtest","text":"x Needs object class adtest. digits Minimal number significant digits. quote Logical, indicating whether strings printed surrounding quotes. default quote set TRUE. prefix Single character character string printed front x. ... arguments passed methods.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/print_adtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"print_adtest: Test Statistics — print_adtest","text":"function returns summary Anderson Darling Test","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/print_adtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"print_adtest: Test Statistics — print_adtest","text":"","code":"data <- rnorm(20, mean = 20) pcr1<-pcr(data, \"normal\", lsl = 17, usl = 23, plot = FALSE) #> Scale for x is already present. #> Adding another scale for x, which will replace the existing scale. #> \tAnderson Darling Test for normal distribution #>  #> data:  data  #> A = 0.4264, mean = 20.111, sd = 1.210, p-value = 0.2841 #> alternative hypothesis: true distribution is not equal to normal  print_adtest(pcr1$adTest) #> \tAnderson Darling Test for normal distribution #>  #> data:  data  #> A = 0.4264, mean = 20.111, sd = 1.210, p-value = 0.2841 #> alternative hypothesis: true distribution is not equal to normal"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":null,"dir":"Reference","previous_headings":"","what":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"Density function, distribution function, quantile function Weibull distribution threshold parameter.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"","code":"pweibull3(q, shape, scale, threshold)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"q numeric vector quantiles. shape shape parameter Weibull distribution. Default 1. scale scale parameter Weibull distribution. Default 1. threshold threshold (location) parameter Weibull distribution. Default 0.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"dweibull3 returns density, pweibull3 returns distribution function, qweibull3 returns quantile function Weibull distribution threshold.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"Weibull distribution scale parameter alpha, shape parameter c, threshold parameter zeta density function given : $$f(x) = \\frac{c}{\\alpha} \\left(\\frac{x - \\zeta}{\\alpha}\\right)^{c-1} \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/pweibull3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pweibull3: The Weibull Distribution (3 Parameter) — pweibull3","text":"","code":"dweibull3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 1.839397 temp <- pweibull3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.6321206 qweibull3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999999"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":null,"dir":"Reference","previous_headings":"","what":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"Density function, distribution function, quantile function Gamma distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"","code":"qgamma3(p, shape, scale, threshold, ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"p numeric vector probabilities. shape shape parameter, default 1. scale scale parameter, default 1. threshold threshold parameter, default 0. ... Additional arguments can passed uniroot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"dgamma3 gives density, pgamma3 gives distribution function, qgamma3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"Gamma distribution scale parameter alpha, shape parameter c, threshold parameter zeta density given : $$f(x) = \\frac{c}{\\alpha}\\left(\\frac{x-\\zeta}{\\alpha}\\right)^{c-1}\\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x-\\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qgamma3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"qgamma3: The gamma Distribution (3 Parameter) — qgamma3","text":"","code":"dgamma3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 0.01532831 temp <- pgamma3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.003659847 qgamma3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999981"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":null,"dir":"Reference","previous_headings":"","what":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"Density function, distribution function, quantile function Lognormal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"","code":"qlnorm3(p, meanlog, sdlog, threshold, ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"p numeric vector probabilities. meanlog, sdlog mean standard deviation distribution log scale default values 0 1 respectively. threshold threshold parameter, default 0. ... Additional arguments can passed uniroot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"dlnorm3 gives density, plnorm3 gives distribution function, qlnorm3 gives quantile function.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"Lognormal distribution meanlog parameter zeta, sdlog parameter sigma, threshold parameter theta density given : $$f(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma(x-\\theta)}\\exp\\left(-\\frac{(\\log(x-\\theta)-\\zeta)^2}{2\\sigma^2}\\right)$$ cumulative distribution function given : $$F(x) = \\Phi\\left(\\frac{\\log(x-\\theta)-\\zeta}{\\sigma}\\right)$$ \\(\\Phi\\) cumulative distribution function standard normal distribution.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qlnorm3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"qlnorm3: The Lognormal Distribution (3 Parameter) — qlnorm3","text":"","code":"dlnorm3(x = 2, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 3.191538 temp <- plnorm3(q = 2, meanlog = 0, sdlog = 1/8, threshold = 1) temp #> [1] 0.5 qlnorm3(p = temp, meanlog = 0, sdlog = 1/8, threshold = 1) #> [1] 2.000004"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"Function qqPlot creates QQ plot values x including line passes first third quartiles.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"","code":"qqPlot(   x,   y,   confbounds = TRUE,   alpha,   main,   xlab,   ylab,   xlim,   ylim,   border = \"red\",   bounds.col = \"black\",   bounds.lty = 1,   start,   showPlot = TRUE,   axis.y.right = FALSE,   bw.theme = FALSE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"x sample qqPlot. y Character string specifying distribution x. function qqPlot supports following character strings y: `beta` `cauchy` `chi-squared` `exponential` `f` `gamma` `geometric` `log-normal` `lognormal` `logistic` `negative binomial` `normal` `Poisson` `weibull` default distribution set `normal`. confbounds Logical value indicating whether display confidence bounds. default, confbounds set TRUE. alpha Numeric value specifying significance level confidence bounds, set `0.05` default. main character string main title plot. xlab character string x-axis label. ylab character string y-axis label. xlim numeric vector length 2 specify limits x-axis. ylim numeric vector length 2 specify limits y-axis. border numerical value single character string giving color interpolation line. default, border set `red`. bounds.col numerical value single character string giving color confidence bounds lines. default, bounds.col set `black`. bounds.lty numeric character: line type confidence bounds lines. can specified either integer (0-6) name: 0: blank 1: solid 2: dashed 3: dotted 4: dotdash 5: longdash 6: twodash Default `1` (solid line). start named list giving parameters fitted initial values. Must supplied distributions (see Details). showPlot Logical value indicating whether display plot. default, showPlot set TRUE. axis.y.right Logical value indicating whether display y-axis right side. default, axis.y.right set FALSE. bw.theme Logical value indicating whether use black--white theme ggplot2 package plot. default, bw.theme set FALSE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"function qqPlot returns invisible list containing: x Sample quantiles. y Theoretical quantiles. int Intercept fitted line. slope Slope fitted line. plot generated QQ plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"Distribution fitting performed using FitDistr function package. computation confidence bounds, variance quantiles estimated using delta method, involves estimation observed Fisher Information matrix well gradient CDF fitted distribution. possible, values replaced normal approximation.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qqPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"qqPlot: Quantile-Quantile Plots for various distributions — qqPlot","text":"","code":"set.seed(123) qqPlot(rnorm(20, mean=90, sd=5), \"normal\",alpha=0.30)  qqPlot(rcauchy(100), \"cauchy\")  qqPlot(rweibull(50, shape = 1, scale = 1), \"weibull\")  qqPlot(rlogis(50), \"logistic\")  qqPlot(rlnorm(50) , \"log-normal\")  qqPlot(rbeta(10, 0.7, 1.5),\"beta\")  qqPlot(rpois(20,3), \"poisson\")  qqPlot(rchisq(20, 10),\"chi-squared\")  qqPlot(rgeom(20, prob = 1/4), \"geometric\")  qqPlot(rnbinom(n = 20, size = 3, prob = 0.2), \"negative binomial\")  qqPlot(rf(20, df1 = 10, df2 = 20), \"f\")"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":null,"dir":"Reference","previous_headings":"","what":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"Density function, distribution function, quantile function Weibull distribution threshold parameter.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"","code":"qweibull3(p, shape, scale, threshold, ...)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"p numeric vector probabilities. shape shape parameter Weibull distribution. Default 1. scale scale parameter Weibull distribution. Default 1. threshold threshold (location) parameter Weibull distribution. Default 0. ... Additional arguments passed uniroot qweibull3.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"dweibull3 returns density, pweibull3 returns distribution function, qweibull3 returns quantile function Weibull distribution threshold.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"Weibull distribution scale parameter alpha, shape parameter c, threshold parameter zeta density function given : $$f(x) = \\frac{c}{\\alpha} \\left(\\frac{x - \\zeta}{\\alpha}\\right)^{c-1} \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$ cumulative distribution function given : $$F(x) = 1 - \\exp\\left(-\\left(\\frac{x - \\zeta}{\\alpha}\\right)^c\\right)$$","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/qweibull3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"qweibull3: The Weibull Distribution (3 Parameter) — qweibull3","text":"","code":"dweibull3(x = 1, scale = 1, shape = 5, threshold = 0) #> [1] 1.839397 temp <- pweibull3(q = 1, scale = 1, shape = 5, threshold = 0) temp #> [1] 0.6321206 qweibull3(p = temp, scale = 1, shape = 5, threshold = 0) #> [1] 0.9999999"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/randomize.html","id":null,"dir":"Reference","previous_headings":"","what":"randomize: Randomization — randomize","title":"randomize: Randomization — randomize","text":"Function randomize run order factorial designs.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/randomize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"randomize: Randomization — randomize","text":"","code":"randomize(fdo, random.seed = 93275938, so = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/randomize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"randomize: Randomization — randomize","text":"fdo object class facDesign.c. random.seed Seed randomness. Logical value specifying whether standard order used . default set FALSE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/randomize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"randomize: Randomization — randomize","text":"object class facDesign.c run order randomized.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/randomize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"randomize: Randomization — randomize","text":"","code":"dfrac <- fracDesign(k = 3) randomize(dfrac) #>   StandOrder RunOrder Block  A  B  C  y #> 3          3        1     1 -1  1 -1 NA #> 6          6        2     1  1 -1  1 NA #> 4          4        3     1  1  1 -1 NA #> 8          8        4     1  1  1  1 NA #> 1          1        5     1 -1 -1 -1 NA #> 2          2        6     1  1 -1 -1 NA #> 7          7        7     1 -1  1  1 NA #> 5          5        8     1 -1 -1  1 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmChoose.html","id":null,"dir":"Reference","previous_headings":"","what":"rsmChoose: Choosing a response surface design from a table — rsmChoose","title":"rsmChoose: Choosing a response surface design from a table — rsmChoose","text":"Designs displayed central composite designs orthogonal blocking near rotatability. function allows users choose design clicking mouse appropriate field.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmChoose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rsmChoose: Choosing a response surface design from a table — rsmChoose","text":"","code":"rsmChoose()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmChoose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rsmChoose: Choosing a response surface design from a table — rsmChoose","text":"Returns object class facDesign.c.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmChoose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rsmChoose: Choosing a response surface design from a table — rsmChoose","text":"","code":"rsmChoose()  #>  #> Choose a response surface design by clicking into the appropriate field #> Waiting for your selection: #>  #>    StandOrd RunOrder Block      A      B  y #> 6         6        1     1  0.000  0.000 NA #> 2         2        2     1  1.000 -1.000 NA #> 7         7        3     1  0.000  0.000 NA #> 5         5        4     1  0.000  0.000 NA #> 3         3        5     1 -1.000  1.000 NA #> 1         1        6     1 -1.000 -1.000 NA #> 4         4        7     1  1.000  1.000 NA #> 9         9        8     2  1.414  0.000 NA #> 8         8        9     2 -1.414  0.000 NA #> 13       13       10     2  0.000  0.000 NA #> 12       12       11     2  0.000  0.000 NA #> 11       11       12     2  0.000  1.414 NA #> 10       10       13     2  0.000 -1.414 NA #> 14       14       14     2  0.000  0.000 NA"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"rsmDesign: Generate a response surface design. — rsmDesign","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"Generates response surface design containing cube, centerCube, star, centerStar portion.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"","code":"rsmDesign(   k = 3,   p = 0,   alpha = \"rotatable\",   blocks = 1,   cc = 1,   cs = 1,   fp = 1,   sp = 1,   faceCentered = FALSE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"k Integer value giving number factors. default, k set `3`. p Integer value giving number additional factors response surface design aliasing effects. Default `0`. alpha Character string indicating type star points generate. `rotatable`(default), `orthogonal`, ``. ``, values cc cs discarded. blocks Integer value specifying number blocks response surface design. Default `1`. cc Integer value giving number centerpoints (per block) cube portion (.e., factorial 2^k design) response surface design. Default `1`. cs Integer value specifying number centerpoints star portion. Default `1`. fp Integer value giving number replications per factorial point (.e., corner points). Default `1`. sp Integer value specifying number replications per star point. Default `1`. faceCentered Logical value indicating whether use faceCentered response surface design (.e., alpha = `1`). Default FALSE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"function returns object class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"Generated designs consist cube, centerCube, star, centerStar portion. replication structure can set parameters cc (centerCube), cs (centerStar), fp (factorialPoints), sp (starPoints).","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/rsmDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rsmDesign: Generate a response surface design. — rsmDesign","text":"","code":"# Example 1: Central composite design for 2 factors with 2 blocks, alpha = 1.41, # 5 centerpoints in the cube portion and 3 centerpoints in the star portion: rsmDesign(k = 2, blocks = 2, alpha = sqrt(2), cc = 5, cs = 3) #>    StandOrd RunOrder Block      A      B  y #> 6         6        1     1  0.000  0.000 NA #> 5         5        2     1  0.000  0.000 NA #> 8         8        3     1  0.000  0.000 NA #> 4         4        4     1  1.000  1.000 NA #> 9         9        5     1  0.000  0.000 NA #> 1         1        6     1 -1.000 -1.000 NA #> 7         7        7     1  0.000  0.000 NA #> 2         2        8     1  1.000 -1.000 NA #> 3         3        9     1 -1.000  1.000 NA #> 10       10       10     2 -1.414  0.000 NA #> 14       14       11     2  0.000  0.000 NA #> 13       13       12     2  0.000  1.414 NA #> 15       15       13     2  0.000  0.000 NA #> 16       16       14     2  0.000  0.000 NA #> 12       12       15     2  0.000 -1.414 NA #> 11       11       16     2  1.414  0.000 NA  # Example 2: Central composite design with both, orthogonality and near rotatability rsmDesign(k = 2, blocks = 2, alpha = \"both\") #>    StandOrd RunOrder Block      A      B  y #> 6         6        1     1  0.000  0.000 NA #> 2         2        2     1  1.000 -1.000 NA #> 7         7        3     1  0.000  0.000 NA #> 5         5        4     1  0.000  0.000 NA #> 3         3        5     1 -1.000  1.000 NA #> 1         1        6     1 -1.000 -1.000 NA #> 4         4        7     1  1.000  1.000 NA #> 9         9        8     2  1.414  0.000 NA #> 8         8        9     2 -1.414  0.000 NA #> 13       13       10     2  0.000  0.000 NA #> 12       12       11     2  0.000  0.000 NA #> 11       11       12     2  0.000  1.414 NA #> 10       10       13     2  0.000 -1.414 NA #> 14       14       14     2  0.000  0.000 NA  # Example 3: Central composite design with: # 2 centerpoints in the factorial portion of the design (i.e., 2) # 1 centerpoint in the star portion of the design (i.e., 1) # 2 replications per factorial point (i.e., 2^3*2 = 16) # 3 replications per star point (i.e., 3*2*3 = 18) # Makes a total of 37 factor combinations rsdo = rsmDesign(k = 3, blocks = 1, alpha = 2, cc = 2, cs = 1, fp = 2, sp = 3)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/simProc.html","id":null,"dir":"Reference","previous_headings":"","what":"simProc: Simulated Process — simProc","title":"simProc: Simulated Process — simProc","text":"function simulate black box process teaching use designed experiments. optimal factor settings can found using sequential assembly strategy .e. apply 2^k factorial design first, calculate path steepest ascent, apply 2^k factorial design augment star portion find optimal factor settings. course, strategies possible.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/simProc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"simProc: Simulated Process — simProc","text":"","code":"simProc(x1, x2, x3, noise = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/simProc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"simProc: Simulated Process — simProc","text":"x1 numeric vector containing values factor 1. x2 numeric vector containing values factor 2. x3 numeric vector containing values factor 3. noise logical value deciding whether noise added . Default setting TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/simProc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"simProc: Simulated Process — simProc","text":"simProc returns numeric value within range [0,1].","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/simProc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"simProc: Simulated Process — simProc","text":"","code":"simProc(120, 140, 1) #> [1] 0.4777199 simProc(120, 220, 1) #> [1] 0.00209724 simProc(160, 140, 1) #> [1] 0.2638334"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"Creates Signal--Noise Ratio plot designs type taguchiDesign.c least two replicates.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"","code":"snPlot(object, type = \"nominal\", factors, fun = mean, response = NULL,        points = FALSE, classic = FALSE, lty, xlab, ylab,        main, ylim, l.col, p.col, ld.col, pch)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"object object class taguchiDesign.c. type character string specifying type Signal--Noise Ratio plot. Possible values : `nominal`: Nominal--best plot equalize observed values nominal value. `smaller`: Smaller--better plot minimize observed values. `larger`: Larger--better plot maximize observed values. Default `nominal`. factors factors effect plot created. fun function constructing effect plot mean, median, etc. Default mean. response character string specifying response variable. object contains multiple responses, parameter selects one column plot. Default NULL. points logical value. TRUE, points shown addition values derived fun. Default FALSE. classic logical value. TRUE, creates effect plot depicted textbooks. Default FALSE. lty numeric value specifying line type used. xlab title x-axis. ylab title y-axis. main overall title plot. ylim numeric vector length 2 specifying limits y-axis. l.col color lines. p.col color points. ld.col color dashed line. pch symbol plotting points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"invisible data.frame containing single Signal--Noise Ratios.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"Signal--Noise Ratio (SNR) calculated based type specified: `nominal`: $$SN = 10 \\cdot log(mean(y) / var(y))$$ `smaller`: $$SN = -10 \\cdot log((1 / n) \\cdot  sum(y^2))$$ `larger`: $$SN = -10 \\cdot log((1 / n) \\cdot sum(1 / y^2))$$ Signal--Noise Ratio plots used estimate effects individual factors judge variance validity results effect plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/snPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"snPlot: Signal-to-Noise-Ratio Plots — snPlot","text":"","code":"tdo <- taguchiDesign(\"L9_3\", replicates = 3) tdo$.response(rnorm(27)) snPlot(tdo, points = TRUE, l.col = 2, p.col = 2, ld.col = 2, pch = 16, lty = 3)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/starDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"starDesign: Axial Design — starDesign","title":"starDesign: Axial Design — starDesign","text":"starDesign function create star portion response surface design. starDesign function can used create star portion response surface design sequential assembly strategy. One can either specify k p alpha cs cc simply simply pass object class facDesign.c data. latter object class facDesign.c otherwise list containing axial runs centerpoints returned.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/starDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"starDesign: Axial Design — starDesign","text":"","code":"starDesign(   k,   p = 0,   alpha = c(\"both\", \"rotatable\", \"orthogonal\"),   cs,   cc,   data )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/starDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"starDesign: Axial Design — starDesign","text":"k Integer value giving number factors. p Integer value giving number factors via aliasing. default set `0`. alpha numeric value given defaults `` .e. `orthogonality` `rotatibility` can set character strings . cs Integer value giving number centerpoints star portion design. cc Integer value giving number centerpoints cube portion design. data Optional. object class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/starDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"starDesign: Axial Design — starDesign","text":"starDesign returns facDesign.c object object class facDesign.c given list containing entries axial runs center points cube star portion design.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/starDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"starDesign: Axial Design — starDesign","text":"","code":"# Example 1: sequential assembly # Factorial design with one center point in the cube portion fdo = facDesign(k = 3, centerCube = 1) # Set the response via generic response method fdo$.response(1:9) # Sequential assembly of a response surface design (rsd) rsd = starDesign(data = fdo)  # Example 2: Returning a list of star point designs starDesign(k = 3, cc = 2, cs = 2, alpha = \"orthogonal\") #> $star #>           A         B         C #> 1 -1.788854  0.000000  0.000000 #> 2  1.788854  0.000000  0.000000 #> 3  0.000000 -1.788854  0.000000 #> 4  0.000000  1.788854  0.000000 #> 5  0.000000  0.000000 -1.788854 #> 6  0.000000  0.000000  1.788854 #>  #> $centerStar #>   A B C #> 1 0 0 0 #> 2 0 0 0 #>  #> $centerCube #>   A B C #> 1 0 0 0 #> 2 0 0 0 #>  starDesign(k = 3, cc = 2, cs = 2, alpha = \"rotatable\") #> $star #>           A         B         C #> 1 -1.681793  0.000000  0.000000 #> 2  1.681793  0.000000  0.000000 #> 3  0.000000 -1.681793  0.000000 #> 4  0.000000  1.681793  0.000000 #> 5  0.000000  0.000000 -1.681793 #> 6  0.000000  0.000000  1.681793 #>  #> $centerStar #>   A B C #> 1 0 0 0 #> 2 0 0 0 #>  #> $centerCube #>   A B C #> 1 0 0 0 #> 2 0 0 0 #>  starDesign(k = 3, cc = 2, cs = 2, alpha = \"both\") #> $star #>           A         B         C #> 1 -1.732051  0.000000  0.000000 #> 2  1.732051  0.000000  0.000000 #> 3  0.000000 -1.732051  0.000000 #> 4  0.000000  1.732051  0.000000 #> 5  0.000000  0.000000 -1.732051 #> 6  0.000000  0.000000  1.732051 #>  #> $centerStar #> NULL #>  #> $centerCube #> NULL #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":null,"dir":"Reference","previous_headings":"","what":"steepAscent-class: Class `steepAscent` — steepAscent.c","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"steepAscent.c class represents steepest ascent algorithm factorial design context. class used optimizing designs based iterative improvements.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"name character string representing name steep ascent design. X data frame containing design matrix steepest ascent procedure. matrix represents factors levels iteration. response data frame containing response values associated design matrix.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"steepAscent.c$.response() steepAscent.c$get() steepAscent.c$.data.frame() steepAscent.c$print() steepAscent.c$plot() steepAscent.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method .response()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"Get set `response` values object class `steepAscent.c`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$.response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"value data frame numeric vector set new `response`. missing, returns current `response`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-get-","dir":"Reference","previous_headings":"","what":"Method get()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"Access specific elements design matrix response data object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$get(i, j)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"integer specifying row index retrieve. j integer specifying column index retrieve.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"Convert object data frame.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"Print details object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-plot-","dir":"Reference","previous_headings":"","what":"Method plot()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"Plot results steepest ascent procedure object class `steepAscent.c`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$plot(main, xlab, ylab, l.col, p.col, line.type, point.shape)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"main main title plot. xlab label x-axis. ylab label y-axis. l.col Color line plot. p.col Color points plot. line.type Type line used plot. point.shape Shape points used plot.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"","code":"steepAscent.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepAscent-class: Class `steepAscent` — steepAscent.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.html","id":null,"dir":"Reference","previous_headings":"","what":"steepAscent: Steepest Ascent — steepAscent","title":"steepAscent: Steepest Ascent — steepAscent","text":"steepAscent method calculate steepest ascent facDesign.c object.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"steepAscent: Steepest Ascent — steepAscent","text":"","code":"steepAscent(factors, response, size = 0.2, steps = 5, data)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"steepAscent: Steepest Ascent — steepAscent","text":"factors List containing vector factor names (coded) included calculation, first factor reference factor. response character response given data. size Numeric integer value giving step size coded units first factor given factors. default size set 0.2. steps Numeric integer value giving number steps. default step set `5`. data object class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"steepAscent: Steepest Ascent — steepAscent","text":"steepAscent returns object class steepAscent.c.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/steepAscent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"steepAscent: Steepest Ascent — steepAscent","text":"","code":"# Example 1 fdo = facDesign(k = 2, centerCube = 5) fdo$lows(c(170, 150)) fdo$highs(c(230, 250)) fdo$names(c(\"temperature\", \"time\")) fdo$unit(c(\"C\", \"minutes\")) yield = c(32.79, 24.07, 48.94, 52.49, 38.89, 48.29, 29.68, 46.5, 44.15) fdo$.response(yield) fdo$summary() #> Information about the factors: #>  #>      temperature    time #> low          170     150 #> high         230     250 #> name temperature    time #> unit           C minutes #> type     numeric numeric #> ----------- #>   StandOrder RunOrder Block  A  B yield #> 4          4        1     1  1  1 32.79 #> 6          6        2     1  0  0 24.07 #> 9          9        3     1  0  0 48.94 #> 3          3        4     1 -1  1 52.49 #> 2          2        5     1  1 -1 38.89 #> 1          1        6     1 -1 -1 48.29 #> 7          7        7     1  0  0 29.68 #> 5          5        8     1  0  0 46.50 #> 8          8        9     1  0  0 44.15  sao = steepAscent(factors = c(\"B\", \"A\"), response = \"yield\", size = 1,                   data = fdo) #>  #> Steepest Ascent for fdo  #>  #>   Run Delta B.coded A.coded B.real A.real #> 1   1     0       0     0.0    200    200 #> 2   2     1      -1   -15.3    150   -259 #> 3   3     2      -2   -30.6    100   -719 #> 4   4     3      -3   -45.9     50  -1178 #> 5   5     4      -4   -61.3      0  -1638 #> 6   6     5      -5   -76.6    -50  -2097"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/summaryFits.html","id":null,"dir":"Reference","previous_headings":"","what":"summaryFits: Fit Summary — summaryFits","title":"summaryFits: Fit Summary — summaryFits","text":"Function provide overview fitted linear models objects class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/summaryFits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summaryFits: Fit Summary — summaryFits","text":"","code":"summaryFits(fdo, lmFit = TRUE, curvTest = TRUE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/summaryFits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summaryFits: Fit Summary — summaryFits","text":"fdo object class facDesign.c. lmFit logical value deciding whether fits object fdo included . default, lmFit set TRUE. curvTest logical value deciding whether curvature tests performed . default, curvTest set TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/summaryFits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summaryFits: Fit Summary — summaryFits","text":"summary output fitted linear models, may include linear fits, curvature tests, original fit values, depending input parameters.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/summaryFits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"summaryFits: Fit Summary — summaryFits","text":"","code":"dfac <- facDesign(k = 3) dfac$.response(data.frame(y = rnorm(8), y2 = rnorm(8))) dfac$set.fits(lm(y ~ A + B , data = dfac$as.data.frame())) dfac$set.fits(lm(y2 ~ A + C, data = dfac$as.data.frame())) summaryFits(dfac) #> ----------- Summary for response 'y' ----------- #>  #> Call: #> lm(formula = y ~ A + B, data = dfac$as.data.frame()) #>  #> Residuals: #>        7        2        6        1        4        3        8        5  #>  0.72766 -0.31377  1.00181  1.02305 -0.39692 -0.03961 -0.29113 -1.71109  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)  -0.1326     0.3824  -0.347    0.743 #> A             0.2332     0.3824   0.610    0.569 #> B            -0.3261     0.3824  -0.853    0.433 #>  #> Residual standard error: 1.082 on 5 degrees of freedom #> Multiple R-squared:  0.1802,\tAdjusted R-squared:  -0.1477  #> F-statistic: 0.5496 on 2 and 5 DF,  p-value: 0.6085 #>  #> ----------- #>  #> Regression in non coded form: #>  #>    y  =  -0.1326 + 0.2332*A - 0.3261*B #>  #> ----------- #> curvTest: not enough centerPoints for a test for curvature #>  #> Test for Curvature:  p = NA #>  #>  #> ----------- Summary for response 'y2' ----------- #>  #> Call: #> lm(formula = y2 ~ A + C, data = dfac$as.data.frame()) #>  #> Residuals: #>         7         2         6         1         4         3         8         5  #>  0.680105  1.349991 -1.194298 -1.340484 -0.001703 -0.007804 -0.153990  0.668182  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|) #> (Intercept)   0.1100     0.3866   0.285    0.787 #> A            -0.3465     0.3866  -0.896    0.411 #> C            -0.2565     0.3866  -0.664    0.536 #>  #> Residual standard error: 1.093 on 5 degrees of freedom #> Multiple R-squared:  0.1992,\tAdjusted R-squared:  -0.1211  #> F-statistic: 0.6218 on 2 and 5 DF,  p-value: 0.5739 #>  #> ----------- #>  #> Regression in non coded form: #>  #>    y2  =  0.11 - 0.3465*A - 0.2565*C #>  #> ----------- #> curvTest: not enough centerPoints for a test for curvature #>  #> Test for Curvature:  p = NA #>  #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":null,"dir":"Reference","previous_headings":"","what":"taguchiChoose: Taguchi Designs — taguchiChoose","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"Shows matrix possible taguchi designs","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"","code":"taguchiChoose(   factors1 = 0,   factors2 = 0,   level1 = 0,   level2 = 0,   ia = 0,   col = 2,   randomize = TRUE,   replicates = 1 )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"factors1 Integer number factors level1. default set `0`. factors2 Integer number factors level2. default set `0`. level1 Integer number levels level1. default set `0`. level2 Integer number levels level2. default set `0`. ia Integer number interactions. default set `0`. col Select color scheme selection matrix: use 1 blue, 2 pink (default), 3 variety colors. randomize logical value (TRUE/FALSE) specifies whether randomize RunOrder design. default, randomize set TRUE. replicates integer specifying number replicates run design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"taguchiChoose returns object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"taguchiChoose returns possible taguchi designs. Specifying number factor1 factors level1 levels (factors1 = 2, level1 = 3 means 2 factors 3 factor levels) factor2 factors level2 levels desired interactions one taguchi designs suggested. parameters set 0, matrix possible taguchi designs shown.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiChoose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"taguchiChoose: Taguchi Designs — taguchiChoose","text":"","code":"tdo1 <- taguchiChoose()  #>  #> Choose a taguchi design by clicking into the appropriate field #> Waiting for your selection: #>  tdo1 <- taguchiChoose(factors1 = 3, level1 = 2) #> 3 factors on 2 levels and 0 factors on 0 levels with 0 desired interactions to be estimated #>   #>  #> Choose a possible taguchi design by clicking into the appropriate field #> Waiting for your selection: #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":null,"dir":"Reference","previous_headings":"","what":"taguchiDesign — taguchiDesign.c","title":"taguchiDesign — taguchiDesign.c","text":"R6 class representing Taguchi experimental design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"taguchiDesign — taguchiDesign.c","text":"name character string specifying name design. Default NULL. factors list factors included Taguchi design. factor typically instance taguchiFactor class. design `data.frame` representing design matrix experiment. includes levels factor every run experiment. Default empty data.frame. designType character string specifying type Taguchi design used. Default NULL. replic `data.frame` containing replication information design. Default empty data.frame. response `data.frame` storing response values collected experiment. Default empty data.frame. Type `data.frame` specifying type responses factors involved design. Default empty data.frame. block `data.frame` indicating blocking factors used design. Default empty data.frame. runOrder `data.frame` detailing order experimental runs conducted. Default empty data.frame. standardOrder `data.frame` detailing standard order experimental runs. Default empty data.frame. desireVal list storing desired values responses experiment. Default empty list. desirability list storing desirability functions used evaluate outcomes experiment. Default empty list. fits `data.frame` containing model fits statistical summaries analysis experimental data. Default empty data.frame.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"taguchiDesign — taguchiDesign.c","text":"taguchiDesign.c$values() taguchiDesign.c$units() taguchiDesign.c$.factors() taguchiDesign.c$names() taguchiDesign.c$.data.frame() taguchiDesign.c$print() taguchiDesign.c$.response() taguchiDesign.c$.nfp() taguchiDesign.c$summary() taguchiDesign.c$effectPlot() taguchiDesign.c$identity() taguchiDesign.c$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-values-","dir":"Reference","previous_headings":"","what":"Method values()","title":"taguchiDesign — taguchiDesign.c","text":"Get set values object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$values(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"value New value, missing value get values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-units-","dir":"Reference","previous_headings":"","what":"Method units()","title":"taguchiDesign — taguchiDesign.c","text":"Get set units object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$units(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"value New units, missing value get units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-factors-","dir":"Reference","previous_headings":"","what":"Method .factors()","title":"taguchiDesign — taguchiDesign.c","text":"Get set factors object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$.factors(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"value New factors, missing value get factors.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"taguchiDesign — taguchiDesign.c","text":"Get set names object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"value New names, missing value get names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-as-data-frame-","dir":"Reference","previous_headings":"","what":"Method as.data.frame()","title":"taguchiDesign — taguchiDesign.c","text":"Return data frame information object taguchiDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$as.data.frame()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"taguchiDesign — taguchiDesign.c","text":"Methods function print Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$print()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-response-","dir":"Reference","previous_headings":"","what":"Method .response()","title":"taguchiDesign — taguchiDesign.c","text":"Get set response object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$.response(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"value New response, missing value get response.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-nfp-","dir":"Reference","previous_headings":"","what":"Method .nfp()","title":"taguchiDesign — taguchiDesign.c","text":"Prints summary factors attributes including low, high, name, unit, type.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$.nfp()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"taguchiDesign — taguchiDesign.c","text":"Methods function summary Package base.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$summary()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-effectplot-","dir":"Reference","previous_headings":"","what":"Method effectPlot()","title":"taguchiDesign — taguchiDesign.c","text":"Plots effects factors response variables.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$effectPlot(   factors,   fun = mean,   response = NULL,   points = FALSE,   l.col,   p.col,   ld.col,   lty,   xlab,   ylab,   main,   ylim,   pch )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"factors Factors plotted. fun Function applied response variables (e.g., mean). response Optional; specifies response variables plot. points Logical; TRUE, plots data points. l.col color lines. p.col color points. ld.col color dashed line. lty Line type plotting. xlab Label x-axis. ylab Label y-axis. main Main title plot. ylim Limits y-axis. pch symbol plotting points.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"taguchiDesign — taguchiDesign.c","text":"","code":"tdo = taguchiDesign(\"L9_3\") tdo$.response(rnorm(9)) tdo$effectPlot(points = TRUE, pch = 16, lty = 3)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-identity-","dir":"Reference","previous_headings":"","what":"Method identity()","title":"taguchiDesign — taguchiDesign.c","text":"Calculates alias table fractional factorial design prints easy read summary defining relations '= ABCD' standard 2^(4-1) factorial design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$identity()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"taguchiDesign — taguchiDesign.c","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign — taguchiDesign.c","text":"","code":"taguchiDesign.c$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign — taguchiDesign.c","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"taguchiDesign — taguchiDesign.c","text":"","code":"## ------------------------------------------------ ## Method `taguchiDesign.c$effectPlot` ## ------------------------------------------------  tdo = taguchiDesign(\"L9_3\") tdo$.response(rnorm(9)) tdo$effectPlot(points = TRUE, pch = 16, lty = 3)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":null,"dir":"Reference","previous_headings":"","what":"taguchiDesign: Taguchi Designs — taguchiDesign","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"Function create taguchi design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"","code":"taguchiDesign(design, randomize = TRUE, replicates = 1)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"design character string specifying orthogonal array Taguchi design. available options : `L4_2\" three two-level factors. `L8_2\" seven two-level factors. `L9_3\" four three-level factors. `L12_2\" 11 two-level factors. `L16_2\" 16 two-level factors `L16_4\" 16 four-level factors. `L18_2_3\" one two-level seven three-level factors. `L25_5\" six five-level factors. `L27_3\" 13 three-level factors. `L32_2\" 32 two-level factors. `L32_2_4\" one two-level factor nine four-level factors. `L36_2_3_a\" 11 two-level factors 12 three-level factors. `L36_2_3_b\" three two-level factors 13 three-level factors. `L50_2_5\" one two-level factor eleven five-level factors. `L8_4_2\" one four-level factor four two-level factors. `L16_4_2_a\" one four-level factor 12 two-level factors. `L16_4_2_b\" two four-level factors nine two-level factors. `L16_4_2_c\" three four-level factors six two-level factors. `L16_4_2_d\" five four-level factors two two-level factors. `L18_6_3\" one six-level factor six three-level factors. randomize logical value (TRUE/FALSE) specifies whether randomize RunOrder design. default, randomize set TRUE. replicates integer specifying number replicates run design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"taguchiDesign returns object class taguchiDesign.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"overview possible taguchi designs possible taguchiChoose.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiDesign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"taguchiDesign: Taguchi Designs — taguchiDesign","text":"","code":"tdo <- taguchiDesign(\"L9_3\") tdo$values(list(A = c(\"material 1\", \"material 2\", \"material 3\"), B = c(29, 30, 35))) tdo$names(c(\"Factor 1\", \"Factor 2\", \"Factor 3\", \"Factor 4\")) tdo$.response(rnorm(9)) tdo$summary() #> Taguchi SINGLE Design #> Information about the factors: #>  #>                  A        B        C        D #> value 1 material 1       29        1        1 #> value 2 material 2       30        2        2 #> value 3 material 3       35        3        3 #> name      Factor 1 Factor 2 Factor 3 Factor 4 #> unit                                          #> type       numeric  numeric  numeric  numeric #>  #> ----------- #>  #>   StandOrder RunOrder Replicate A B C D    rnorm(9) #> 1          5        1         1 2 2 3 1  0.54317290 #> 2          1        2         1 1 1 1 1  0.02142719 #> 3          7        3         1 3 1 3 2  0.16256579 #> 4          8        4         1 3 2 1 3  1.24175425 #> 5          2        5         1 1 2 2 2  0.78277748 #> 6          4        6         1 2 1 2 3  0.04812071 #> 7          3        7         1 1 3 3 3 -1.47540014 #> 8          9        8         1 3 3 2 1  0.43576230 #> 9          6        9         1 2 3 1 2 -0.07047018 #>  #> ----------- #>"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"taguchiFactor — taguchiFactor","title":"taguchiFactor — taguchiFactor","text":"R6 class representing factor Taguchi design.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"taguchiFactor — taguchiFactor","text":"values vector containing levels values associated factor. Default NA. name character string specifying name factor. Default empty string ``. unit character string specifying unit measurement factor. Default empty string ``. type character string specifying type factor, can either `numeric` `categorical`. Default `numeric`.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"taguchiFactor — taguchiFactor","text":"taguchiFactor$attributes() taguchiFactor$.values() taguchiFactor$.unit() taguchiFactor$names() taguchiFactor$clone()","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"method-attributes-","dir":"Reference","previous_headings":"","what":"Method attributes()","title":"taguchiFactor — taguchiFactor","text":"Get attributes factor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiFactor — taguchiFactor","text":"","code":"taguchiFactor$attributes()"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"method-values-","dir":"Reference","previous_headings":"","what":"Method .values()","title":"taguchiFactor — taguchiFactor","text":"Get set values factors object class taguchiFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiFactor — taguchiFactor","text":"","code":"taguchiFactor$.values(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiFactor — taguchiFactor","text":"value New values, missing value get values.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"method-unit-","dir":"Reference","previous_headings":"","what":"Method .unit()","title":"taguchiFactor — taguchiFactor","text":"Get set units factors object class taguchiFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiFactor — taguchiFactor","text":"","code":"taguchiFactor$.unit(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiFactor — taguchiFactor","text":"value New unit, missing value get units.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"method-names-","dir":"Reference","previous_headings":"","what":"Method names()","title":"taguchiFactor — taguchiFactor","text":"Get set names object class taguchiFactor.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiFactor — taguchiFactor","text":"","code":"taguchiFactor$names(value)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiFactor — taguchiFactor","text":"value New names, missing value get names.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"taguchiFactor — taguchiFactor","text":"objects class cloneable method.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"taguchiFactor — taguchiFactor","text":"","code":"taguchiFactor$clone(deep = FALSE)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/taguchiFactor.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"taguchiFactor — taguchiFactor","text":"deep Whether make deep clone.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":null,"dir":"Reference","previous_headings":"","what":"wirePlot: 3D Plot — wirePlot","title":"wirePlot: 3D Plot — wirePlot","text":"Creates wireframe diagram object class facDesign.c.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wirePlot: 3D Plot — wirePlot","text":"","code":"wirePlot(   x,   y,   z,   data = NULL,   xlim,   ylim,   zlim,   main,   xlab,   ylab,   sub,   sub.a = TRUE,   zlab,   form = \"fit\",   col = \"Rainbow\",   steps,   fun,   plot = TRUE,   show.scale = TRUE,   n.scene = \"scene\" )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wirePlot: 3D Plot — wirePlot","text":"x Name providing Factor plot. y Name providing Factor B plot. z Name giving Response variable. data Needs object class facDesign contains names x, y, z. xlim Numeric vector length 2: limits x-axis. missing, limits set automatically. ylim Numeric vector length 2: limits y-axis. missing, limits set automatically. zlim Numeric vector length 2: limits z-axis. missing, limits set automatically. main Character string: title plot. xlab Character string: label x-axis. ylab Character string: label y-axis. sub Character string: subtitle plot. Default NULL. sub.Logical value indicating whether display subtitle. Default TRUE. zlab Character string: label z-axis. form Character string specifying form surface plotted. Options include `quadratic` `full` `interaction` `linear` `fit` Default `fit`. col Character string specifying color palette use plot (e.g., `Rainbow`, `Jet`, `Earth`, `Electric`). Default `Rainbow`. steps Numeric value specifying number steps grid plot. Higher values result smoother surface. fun Optional function applied data plotting. plot Logical value indicating whether display plot. Default TRUE. show.scale Logical value indicating whether display color scale plot. Default TRUE. n.scene Character string specifying scene name plot. Default `scene`.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wirePlot: 3D Plot — wirePlot","text":"function wirePlot returns invisible list containing: plot generated wireframe plot. grid grid data used plotting.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"wirePlot: 3D Plot — wirePlot","text":"wirePlot function used create 3D wireframe plot visualizes relationship two factors response variable. plot can customized various ways, including changing axis labels, adding subtitles, choosing color palette.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wirePlot: 3D Plot — wirePlot","text":"","code":"# Example 1: Basic wireframe plot x <- seq(-10, 10, length = 30) y <- seq(-10, 10, length = 30) z <- outer(x, y, function(a, b) sin(sqrt(a^2 + b^2))) wirePlot(x, y, z, main = \"3D Wireframe Plot\", xlab = \"X-Axis\", ylab = \"Y-Axis\", zlab = \"Z-Axis\")  fdo = rsmDesign(k = 3, blocks = 2) fdo$.response(data.frame(y = rnorm(fdo$nrow())))  #I - display linear fit wirePlot(A,B,y, data = fdo, form = \"linear\")  #II - display full fit (i.e. effect, interactions and quadratic effects wirePlot(A,B,y, data = fdo, form = \"full\")  #III - display a fit specified before fdo$set.fits(fdo$lm(y ~ B + I(A^2))) wirePlot(A,B,y, data = fdo, form = \"fit\")  #IV - display a fit given directly wirePlot(A,B,y, data = fdo, form = \"y ~ A*B + I(A^2)\")  #V - display a fit using a different colorRamp wirePlot(A,B,y, data = fdo, form = \"full\", col = 2)"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot3.html","id":null,"dir":"Reference","previous_headings":"","what":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","title":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","text":"function creates ternary plot mixture designs (.e. object class mixDesign).","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","text":"","code":"wirePlot3(   x,   y,   z,   response,   data = NULL,   main,   xlab,   ylab,   zlab,   form = \"linear\",   col = \"Rainbow\",   steps,   plot = TRUE )"},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","text":"x Factor 1 mixDesign object. y Factor 2 mixDesign object. z Factor 3 mixDesign object. response response mixDesign object. data mixDesign object x,y,z response taken. main Character string specifying main title plot. xlab Character string specifying label x-axis. ylab Character string specifying label y-axis. zlab Character string specifying label z-axis. form character string formula syntax `y ~ + B + C`. form character string, one following: `linear` `quadratic` form influences output described reference listed . default, form set `linear`. col Character string specifying color palette use plot (e.g., `Rainbow`, `Jet`, `Earth`, `Electric`). Default `Rainbow`. steps numeric value specifying resolution plot, .e., number rows square matrix, also represents number grid points per factor. default, steps set 25. plot Logical value indicating whether display plot. Default TRUE.","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","text":"function wirePlot3 returns invisible matrix containing response values NA's numerics.","code":""},{"path":[]},{"path":"https://fabianenc.github.io/r6qualitytools/reference/wirePlot3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"wirePlot3: function to create a ternary plot (3D wire plot) — wirePlot3","text":"","code":"#Example 1 mdo <- mixDesign(3, 2, center = FALSE, axial = FALSE, randomize = FALSE, replicates = c(1, 1, 2, 3)) elongation <- c(11.0, 12.4, 15.0, 14.8, 16.1, 17.7,                 16.4, 16.6, 8.8, 10.0, 10.0, 9.7,                 11.8, 16.8, 16.0) mdo$.response(elongation) wirePlot3(A, B, C, elongation, data = mdo, form = \"quadratic\")  #Example 2 mdo <- mixDesign(3,2, center = FALSE, axial = FALSE, randomize = FALSE, replicates  = c(1,1,2,3)) mdo$names(c(\"polyethylene\", \"polystyrene\", \"polypropylene\")) mdo$units(\"percent\") elongation <- c(11.0, 12.4, 15.0, 14.8, 16.1, 17.7,                 16.4, 16.6, 8.8, 10.0, 10.0, 9.7,                 11.8, 16.8, 16.0) mdo$.response(elongation) wirePlot3(A, B, C, elongation, data = mdo, form = \"linear\") wirePlot3(A, B, C, elongation, data = mdo, form = \"quadratic\",            col = \"Jet\") wirePlot3(A, B, C, elongation, data = mdo,            form = \"elongation ~ I(A^2) - B:A + I(C^2)\",            col = \"Electric\") wirePlot3(A, B, C, elongation, data = mdo, form = \"quadratic\",            col = \"Earth\")"},{"path":"https://fabianenc.github.io/r6qualitytools/news/index.html","id":"r6qualitytools-101","dir":"Changelog","previous_headings":"","what":"r6qualitytools 1.0.1","title":"r6qualitytools 1.0.1","text":"CRAN release: 2024-10-03","code":""},{"path":"https://fabianenc.github.io/r6qualitytools/news/index.html","id":"r6qualitytools-100","dir":"Changelog","previous_headings":"","what":"r6qualitytools 1.0.0","title":"r6qualitytools 1.0.0","text":"Initial CRAN submission.","code":""}]
